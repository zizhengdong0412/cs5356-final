"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sendgrid";
exports.ids = ["vendor-chunks/@sendgrid"];
exports.modules = {

/***/ "(rsc)/./node_modules/@sendgrid/client/index.js":
/*!************************************************!*\
  !*** ./node_modules/@sendgrid/client/index.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst client = __webpack_require__(/*! ./src/client */ \"(rsc)/./node_modules/@sendgrid/client/src/client.js\");\nconst Client = __webpack_require__(/*! ./src/classes/client */ \"(rsc)/./node_modules/@sendgrid/client/src/classes/client.js\");\nmodule.exports = client;\nmodule.exports.Client = Client;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2NsaWVudC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDO0FBRXZCRSxPQUFPQyxPQUFPLEdBQUdKO0FBQ2pCRyxxQkFBcUIsR0FBR0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWNpcGUta2VlcGVyLy4vbm9kZV9tb2R1bGVzL0BzZW5kZ3JpZC9jbGllbnQvaW5kZXguanM/ZWI0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGNsaWVudCA9IHJlcXVpcmUoJy4vc3JjL2NsaWVudCcpO1xuY29uc3QgQ2xpZW50ID0gcmVxdWlyZSgnLi9zcmMvY2xhc3Nlcy9jbGllbnQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjbGllbnQ7XG5tb2R1bGUuZXhwb3J0cy5DbGllbnQgPSBDbGllbnQ7XG4iXSwibmFtZXMiOlsiY2xpZW50IiwicmVxdWlyZSIsIkNsaWVudCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/client/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/client/src/classes/client.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sendgrid/client/src/classes/client.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst axios = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/dist/node/axios.cjs\");\nconst pkg = __webpack_require__(/*! ../../package.json */ \"(rsc)/./node_modules/@sendgrid/client/package.json\");\nconst { helpers: { mergeData }, classes: { Response, ResponseError } } = __webpack_require__(/*! @sendgrid/helpers */ \"(rsc)/./node_modules/@sendgrid/helpers/index.js\");\nconst API_KEY_PREFIX = \"SG.\";\nconst SENDGRID_BASE_URL = \"https://api.sendgrid.com/\";\nconst TWILIO_BASE_URL = \"https://email.twilio.com/\";\nconst SENDGRID_REGION = \"global\";\n// Initialize the allowed regions and their corresponding hosts\nconst REGION_HOST_MAP = {\n    eu: \"https://api.eu.sendgrid.com/\",\n    global: \"https://api.sendgrid.com/\"\n};\nclass Client {\n    constructor(){\n        this.auth = \"\";\n        this.impersonateSubuser = \"\";\n        this.sendgrid_region = SENDGRID_REGION;\n        this.defaultHeaders = {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"User-Agent\": \"sendgrid/\" + pkg.version + \";nodejs\"\n        };\n        this.defaultRequest = {\n            baseUrl: SENDGRID_BASE_URL,\n            url: \"\",\n            method: \"GET\",\n            headers: {},\n            maxContentLength: Infinity,\n            maxBodyLength: Infinity\n        };\n    }\n    setApiKey(apiKey) {\n        this.auth = \"Bearer \" + apiKey;\n        this.setDefaultRequest(\"baseUrl\", REGION_HOST_MAP[this.sendgrid_region]);\n        if (!this.isValidApiKey(apiKey)) {\n            console.warn(`API key does not start with \"${API_KEY_PREFIX}\".`);\n        }\n    }\n    setTwilioEmailAuth(username, password) {\n        const b64Auth = Buffer.from(username + \":\" + password).toString(\"base64\");\n        this.auth = \"Basic \" + b64Auth;\n        this.setDefaultRequest(\"baseUrl\", TWILIO_BASE_URL);\n        if (!this.isValidTwilioAuth(username, password)) {\n            console.warn(\"Twilio Email credentials must be non-empty strings.\");\n        }\n    }\n    isValidApiKey(apiKey) {\n        return this.isString(apiKey) && apiKey.trim().startsWith(API_KEY_PREFIX);\n    }\n    isValidTwilioAuth(username, password) {\n        return this.isString(username) && username && this.isString(password) && password;\n    }\n    isString(value) {\n        return typeof value === \"string\" || value instanceof String;\n    }\n    setImpersonateSubuser(subuser) {\n        this.impersonateSubuser = subuser;\n    }\n    setDefaultHeader(key, value) {\n        if (key !== null && typeof key === \"object\") {\n            // key is an object\n            Object.assign(this.defaultHeaders, key);\n            return this;\n        }\n        this.defaultHeaders[key] = value;\n        return this;\n    }\n    setDefaultRequest(key, value) {\n        if (key !== null && typeof key === \"object\") {\n            // key is an object\n            Object.assign(this.defaultRequest, key);\n            return this;\n        }\n        this.defaultRequest[key] = value;\n        return this;\n    }\n    /**\n   * Global is the default residency (or region)\n   * Global region means the message will be sent through https://api.sendgrid.com\n   * EU region means the message will be sent through https://api.eu.sendgrid.com\n   **/ setDataResidency(region) {\n        if (!REGION_HOST_MAP.hasOwnProperty(region)) {\n            console.warn('Region can only be \"global\" or \"eu\".');\n        } else {\n            this.sendgrid_region = region;\n            this.setDefaultRequest(\"baseUrl\", REGION_HOST_MAP[region]);\n        }\n        return this;\n    }\n    createHeaders(data) {\n        // Merge data with default headers.\n        const headers = mergeData(this.defaultHeaders, data);\n        // Add auth, but don't overwrite if header already set.\n        if (typeof headers.Authorization === \"undefined\" && this.auth) {\n            headers.Authorization = this.auth;\n        }\n        if (this.impersonateSubuser) {\n            headers[\"On-Behalf-Of\"] = this.impersonateSubuser;\n        }\n        return headers;\n    }\n    createRequest(data) {\n        let options = {\n            url: data.uri || data.url,\n            baseUrl: data.baseUrl,\n            method: data.method,\n            data: data.body,\n            params: data.qs,\n            headers: data.headers\n        };\n        // Merge data with default request.\n        options = mergeData(this.defaultRequest, options);\n        options.headers = this.createHeaders(options.headers);\n        options.baseURL = options.baseUrl;\n        delete options.baseUrl;\n        return options;\n    }\n    request(data, cb) {\n        data = this.createRequest(data);\n        const promise = new Promise((resolve, reject)=>{\n            axios(data).then((response)=>{\n                return resolve([\n                    new Response(response.status, response.data, response.headers),\n                    response.data\n                ]);\n            }).catch((error)=>{\n                if (error.response) {\n                    if (error.response.status >= 400) {\n                        return reject(new ResponseError(error.response));\n                    }\n                }\n                return reject(error);\n            });\n        });\n        // Throw an error in case a callback function was not passed.\n        if (cb && typeof cb !== \"function\") {\n            throw new Error(\"Callback passed is not a function.\");\n        }\n        if (cb) {\n            return promise.then((result)=>cb(null, result)).catch((error)=>cb(error, null));\n        }\n        return promise;\n    }\n}\nmodule.exports = Client;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2NsaWVudC9zcmMvY2xhc3Nlcy9jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNQSxRQUFRQyxtQkFBT0EsQ0FBQztBQUN0QixNQUFNQyxNQUFNRCxtQkFBT0EsQ0FBQztBQUNwQixNQUFNLEVBQ0pFLFNBQVMsRUFDUEMsU0FBUyxFQUNWLEVBQ0RDLFNBQVMsRUFDUEMsUUFBUSxFQUNSQyxhQUFhLEVBQ2QsRUFDRixHQUFHTixtQkFBT0EsQ0FBQztBQUVaLE1BQU1PLGlCQUFpQjtBQUN2QixNQUFNQyxvQkFBb0I7QUFDMUIsTUFBTUMsa0JBQWtCO0FBQ3hCLE1BQU1DLGtCQUFrQjtBQUN4QiwrREFBK0Q7QUFDL0QsTUFBTUMsa0JBQWtCO0lBQ3RCQyxJQUFJO0lBQ0pDLFFBQVE7QUFDVjtBQUNBLE1BQU1DO0lBQ0pDLGFBQWM7UUFDWixJQUFJLENBQUNDLElBQUksR0FBRztRQUNaLElBQUksQ0FBQ0Msa0JBQWtCLEdBQUc7UUFDMUIsSUFBSSxDQUFDQyxlQUFlLEdBQUdSO1FBRXZCLElBQUksQ0FBQ1MsY0FBYyxHQUFHO1lBQ3BCQyxRQUFRO1lBQ1IsZ0JBQWdCO1lBQ2hCLGNBQWMsY0FBY25CLElBQUlvQixPQUFPLEdBQUc7UUFDNUM7UUFFQSxJQUFJLENBQUNDLGNBQWMsR0FBRztZQUNwQkMsU0FBU2Y7WUFDVGdCLEtBQUs7WUFDTEMsUUFBUTtZQUNSQyxTQUFTLENBQUM7WUFDVkMsa0JBQWtCQztZQUNsQkMsZUFBZUQ7UUFDakI7SUFDRjtJQUVBRSxVQUFVQyxNQUFNLEVBQUU7UUFDaEIsSUFBSSxDQUFDZixJQUFJLEdBQUcsWUFBWWU7UUFDeEIsSUFBSSxDQUFDQyxpQkFBaUIsQ0FBQyxXQUFXckIsZUFBZSxDQUFDLElBQUksQ0FBQ08sZUFBZSxDQUFDO1FBRXZFLElBQUksQ0FBQyxJQUFJLENBQUNlLGFBQWEsQ0FBQ0YsU0FBUztZQUMvQkcsUUFBUUMsSUFBSSxDQUFDLENBQUMsNkJBQTZCLEVBQUU1QixlQUFlLEVBQUUsQ0FBQztRQUNqRTtJQUNGO0lBRUE2QixtQkFBbUJDLFFBQVEsRUFBRUMsUUFBUSxFQUFFO1FBQ3JDLE1BQU1DLFVBQVVDLE9BQU9DLElBQUksQ0FBQ0osV0FBVyxNQUFNQyxVQUFVSSxRQUFRLENBQUM7UUFDaEUsSUFBSSxDQUFDMUIsSUFBSSxHQUFHLFdBQVd1QjtRQUN2QixJQUFJLENBQUNQLGlCQUFpQixDQUFDLFdBQVd2QjtRQUVsQyxJQUFJLENBQUMsSUFBSSxDQUFDa0MsaUJBQWlCLENBQUNOLFVBQVVDLFdBQVc7WUFDL0NKLFFBQVFDLElBQUksQ0FBQztRQUNmO0lBQ0Y7SUFFQUYsY0FBY0YsTUFBTSxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDYSxRQUFRLENBQUNiLFdBQVdBLE9BQU9jLElBQUksR0FBR0MsVUFBVSxDQUFDdkM7SUFDM0Q7SUFFQW9DLGtCQUFrQk4sUUFBUSxFQUFFQyxRQUFRLEVBQUU7UUFDcEMsT0FBTyxJQUFJLENBQUNNLFFBQVEsQ0FBQ1AsYUFBYUEsWUFDN0IsSUFBSSxDQUFDTyxRQUFRLENBQUNOLGFBQWFBO0lBQ2xDO0lBRUFNLFNBQVNHLEtBQUssRUFBRTtRQUNkLE9BQU8sT0FBT0EsVUFBVSxZQUFZQSxpQkFBaUJDO0lBQ3ZEO0lBRUFDLHNCQUFzQkMsT0FBTyxFQUFFO1FBQzdCLElBQUksQ0FBQ2pDLGtCQUFrQixHQUFHaUM7SUFDNUI7SUFFQUMsaUJBQWlCQyxHQUFHLEVBQUVMLEtBQUssRUFBRTtRQUMzQixJQUFJSyxRQUFRLFFBQVEsT0FBT0EsUUFBUSxVQUFVO1lBQzNDLG1CQUFtQjtZQUNuQkMsT0FBT0MsTUFBTSxDQUFDLElBQUksQ0FBQ25DLGNBQWMsRUFBRWlDO1lBQ25DLE9BQU8sSUFBSTtRQUNiO1FBRUEsSUFBSSxDQUFDakMsY0FBYyxDQUFDaUMsSUFBSSxHQUFHTDtRQUMzQixPQUFPLElBQUk7SUFDYjtJQUVBZixrQkFBa0JvQixHQUFHLEVBQUVMLEtBQUssRUFBRTtRQUM1QixJQUFJSyxRQUFRLFFBQVEsT0FBT0EsUUFBUSxVQUFVO1lBQzNDLG1CQUFtQjtZQUNuQkMsT0FBT0MsTUFBTSxDQUFDLElBQUksQ0FBQ2hDLGNBQWMsRUFBRThCO1lBQ25DLE9BQU8sSUFBSTtRQUNiO1FBRUEsSUFBSSxDQUFDOUIsY0FBYyxDQUFDOEIsSUFBSSxHQUFHTDtRQUMzQixPQUFPLElBQUk7SUFDYjtJQUVBOzs7O0lBSUUsR0FDRlEsaUJBQWlCQyxNQUFNLEVBQUU7UUFDdkIsSUFBSSxDQUFDN0MsZ0JBQWdCOEMsY0FBYyxDQUFDRCxTQUFTO1lBQzNDdEIsUUFBUUMsSUFBSSxDQUFDO1FBQ2YsT0FBTztZQUNMLElBQUksQ0FBQ2pCLGVBQWUsR0FBR3NDO1lBQ3ZCLElBQUksQ0FBQ3hCLGlCQUFpQixDQUFDLFdBQVdyQixlQUFlLENBQUM2QyxPQUFPO1FBQzNEO1FBQ0EsT0FBTyxJQUFJO0lBQ2I7SUFFQUUsY0FBY0MsSUFBSSxFQUFFO1FBQ2xCLG1DQUFtQztRQUNuQyxNQUFNakMsVUFBVXZCLFVBQVUsSUFBSSxDQUFDZ0IsY0FBYyxFQUFFd0M7UUFFL0MsdURBQXVEO1FBQ3ZELElBQUksT0FBT2pDLFFBQVFrQyxhQUFhLEtBQUssZUFBZSxJQUFJLENBQUM1QyxJQUFJLEVBQUU7WUFDN0RVLFFBQVFrQyxhQUFhLEdBQUcsSUFBSSxDQUFDNUMsSUFBSTtRQUNuQztRQUVBLElBQUksSUFBSSxDQUFDQyxrQkFBa0IsRUFBRTtZQUMzQlMsT0FBTyxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUNULGtCQUFrQjtRQUNuRDtRQUVBLE9BQU9TO0lBQ1Q7SUFFQW1DLGNBQWNGLElBQUksRUFBRTtRQUNsQixJQUFJRyxVQUFVO1lBQ1p0QyxLQUFLbUMsS0FBS0ksR0FBRyxJQUFJSixLQUFLbkMsR0FBRztZQUN6QkQsU0FBU29DLEtBQUtwQyxPQUFPO1lBQ3JCRSxRQUFRa0MsS0FBS2xDLE1BQU07WUFDbkJrQyxNQUFNQSxLQUFLSyxJQUFJO1lBQ2ZDLFFBQVFOLEtBQUtPLEVBQUU7WUFDZnhDLFNBQVNpQyxLQUFLakMsT0FBTztRQUN2QjtRQUVBLG1DQUFtQztRQUNuQ29DLFVBQVUzRCxVQUFVLElBQUksQ0FBQ21CLGNBQWMsRUFBRXdDO1FBQ3pDQSxRQUFRcEMsT0FBTyxHQUFHLElBQUksQ0FBQ2dDLGFBQWEsQ0FBQ0ksUUFBUXBDLE9BQU87UUFDcERvQyxRQUFRSyxPQUFPLEdBQUdMLFFBQVF2QyxPQUFPO1FBQ2pDLE9BQU91QyxRQUFRdkMsT0FBTztRQUV0QixPQUFPdUM7SUFDVDtJQUVBTSxRQUFRVCxJQUFJLEVBQUVVLEVBQUUsRUFBRTtRQUNoQlYsT0FBTyxJQUFJLENBQUNFLGFBQWEsQ0FBQ0Y7UUFFMUIsTUFBTVcsVUFBVSxJQUFJQyxRQUFRLENBQUNDLFNBQVNDO1lBQ3BDMUUsTUFBTTRELE1BQ0hlLElBQUksQ0FBQ0MsQ0FBQUE7Z0JBQ0osT0FBT0gsUUFBUTtvQkFDYixJQUFJbkUsU0FBU3NFLFNBQVNDLE1BQU0sRUFBRUQsU0FBU2hCLElBQUksRUFBRWdCLFNBQVNqRCxPQUFPO29CQUM3RGlELFNBQVNoQixJQUFJO2lCQUNkO1lBQ0gsR0FDQ2tCLEtBQUssQ0FBQ0MsQ0FBQUE7Z0JBQ0wsSUFBSUEsTUFBTUgsUUFBUSxFQUFFO29CQUNsQixJQUFJRyxNQUFNSCxRQUFRLENBQUNDLE1BQU0sSUFBSSxLQUFLO3dCQUNoQyxPQUFPSCxPQUFPLElBQUluRSxjQUFjd0UsTUFBTUgsUUFBUTtvQkFDaEQ7Z0JBQ0Y7Z0JBQ0EsT0FBT0YsT0FBT0s7WUFDaEI7UUFDSjtRQUVBLDZEQUE2RDtRQUM3RCxJQUFJVCxNQUFNLE9BQU9BLE9BQU8sWUFBWTtZQUNsQyxNQUFNLElBQUlVLE1BQU07UUFDbEI7UUFFQSxJQUFJVixJQUFJO1lBQ04sT0FBT0MsUUFDSkksSUFBSSxDQUFDTSxDQUFBQSxTQUFVWCxHQUFHLE1BQU1XLFNBQ3hCSCxLQUFLLENBQUNDLENBQUFBLFFBQVNULEdBQUdTLE9BQU87UUFDOUI7UUFFQSxPQUFPUjtJQUNUO0FBQ0Y7QUFFQVcsT0FBT0MsT0FBTyxHQUFHcEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWNpcGUta2VlcGVyLy4vbm9kZV9tb2R1bGVzL0BzZW5kZ3JpZC9jbGllbnQvc3JjL2NsYXNzZXMvY2xpZW50LmpzP2Q5NjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpO1xuY29uc3QgcGtnID0gcmVxdWlyZSgnLi4vLi4vcGFja2FnZS5qc29uJyk7XG5jb25zdCB7XG4gIGhlbHBlcnM6IHtcbiAgICBtZXJnZURhdGEsXG4gIH0sXG4gIGNsYXNzZXM6IHtcbiAgICBSZXNwb25zZSxcbiAgICBSZXNwb25zZUVycm9yLFxuICB9LFxufSA9IHJlcXVpcmUoJ0BzZW5kZ3JpZC9oZWxwZXJzJyk7XG5cbmNvbnN0IEFQSV9LRVlfUFJFRklYID0gJ1NHLic7XG5jb25zdCBTRU5ER1JJRF9CQVNFX1VSTCA9ICdodHRwczovL2FwaS5zZW5kZ3JpZC5jb20vJztcbmNvbnN0IFRXSUxJT19CQVNFX1VSTCA9ICdodHRwczovL2VtYWlsLnR3aWxpby5jb20vJztcbmNvbnN0IFNFTkRHUklEX1JFR0lPTiA9ICdnbG9iYWwnO1xuLy8gSW5pdGlhbGl6ZSB0aGUgYWxsb3dlZCByZWdpb25zIGFuZCB0aGVpciBjb3JyZXNwb25kaW5nIGhvc3RzXG5jb25zdCBSRUdJT05fSE9TVF9NQVAgPSB7XG4gIGV1OiAnaHR0cHM6Ly9hcGkuZXUuc2VuZGdyaWQuY29tLycsXG4gIGdsb2JhbDogJ2h0dHBzOi8vYXBpLnNlbmRncmlkLmNvbS8nLFxufTtcbmNsYXNzIENsaWVudCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuYXV0aCA9ICcnO1xuICAgIHRoaXMuaW1wZXJzb25hdGVTdWJ1c2VyID0gJyc7XG4gICAgdGhpcy5zZW5kZ3JpZF9yZWdpb24gPSBTRU5ER1JJRF9SRUdJT047XG5cbiAgICB0aGlzLmRlZmF1bHRIZWFkZXJzID0ge1xuICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgJ1VzZXItQWdlbnQnOiAnc2VuZGdyaWQvJyArIHBrZy52ZXJzaW9uICsgJztub2RlanMnLFxuICAgIH07XG5cbiAgICB0aGlzLmRlZmF1bHRSZXF1ZXN0ID0ge1xuICAgICAgYmFzZVVybDogU0VOREdSSURfQkFTRV9VUkwsXG4gICAgICB1cmw6ICcnLFxuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHt9LFxuICAgICAgbWF4Q29udGVudExlbmd0aDogSW5maW5pdHksIC8vIERvbid0IGxpbWl0IHRoZSBjb250ZW50IGxlbmd0aC5cbiAgICAgIG1heEJvZHlMZW5ndGg6IEluZmluaXR5LFxuICAgIH07XG4gIH1cblxuICBzZXRBcGlLZXkoYXBpS2V5KSB7XG4gICAgdGhpcy5hdXRoID0gJ0JlYXJlciAnICsgYXBpS2V5O1xuICAgIHRoaXMuc2V0RGVmYXVsdFJlcXVlc3QoJ2Jhc2VVcmwnLCBSRUdJT05fSE9TVF9NQVBbdGhpcy5zZW5kZ3JpZF9yZWdpb25dKTtcblxuICAgIGlmICghdGhpcy5pc1ZhbGlkQXBpS2V5KGFwaUtleSkpIHtcbiAgICAgIGNvbnNvbGUud2FybihgQVBJIGtleSBkb2VzIG5vdCBzdGFydCB3aXRoIFwiJHtBUElfS0VZX1BSRUZJWH1cIi5gKTtcbiAgICB9XG4gIH1cblxuICBzZXRUd2lsaW9FbWFpbEF1dGgodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgY29uc3QgYjY0QXV0aCA9IEJ1ZmZlci5mcm9tKHVzZXJuYW1lICsgJzonICsgcGFzc3dvcmQpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbiAgICB0aGlzLmF1dGggPSAnQmFzaWMgJyArIGI2NEF1dGg7XG4gICAgdGhpcy5zZXREZWZhdWx0UmVxdWVzdCgnYmFzZVVybCcsIFRXSUxJT19CQVNFX1VSTCk7XG5cbiAgICBpZiAoIXRoaXMuaXNWYWxpZFR3aWxpb0F1dGgodXNlcm5hbWUsIHBhc3N3b3JkKSkge1xuICAgICAgY29uc29sZS53YXJuKCdUd2lsaW8gRW1haWwgY3JlZGVudGlhbHMgbXVzdCBiZSBub24tZW1wdHkgc3RyaW5ncy4nKTtcbiAgICB9XG4gIH1cblxuICBpc1ZhbGlkQXBpS2V5KGFwaUtleSkge1xuICAgIHJldHVybiB0aGlzLmlzU3RyaW5nKGFwaUtleSkgJiYgYXBpS2V5LnRyaW0oKS5zdGFydHNXaXRoKEFQSV9LRVlfUFJFRklYKTtcbiAgfVxuXG4gIGlzVmFsaWRUd2lsaW9BdXRoKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgIHJldHVybiB0aGlzLmlzU3RyaW5nKHVzZXJuYW1lKSAmJiB1c2VybmFtZVxuICAgICAgJiYgdGhpcy5pc1N0cmluZyhwYXNzd29yZCkgJiYgcGFzc3dvcmQ7XG4gIH1cblxuICBpc1N0cmluZyh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnIHx8IHZhbHVlIGluc3RhbmNlb2YgU3RyaW5nO1xuICB9XG5cbiAgc2V0SW1wZXJzb25hdGVTdWJ1c2VyKHN1YnVzZXIpIHtcbiAgICB0aGlzLmltcGVyc29uYXRlU3VidXNlciA9IHN1YnVzZXI7XG4gIH1cblxuICBzZXREZWZhdWx0SGVhZGVyKGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5ICE9PSBudWxsICYmIHR5cGVvZiBrZXkgPT09ICdvYmplY3QnKSB7XG4gICAgICAvLyBrZXkgaXMgYW4gb2JqZWN0XG4gICAgICBPYmplY3QuYXNzaWduKHRoaXMuZGVmYXVsdEhlYWRlcnMsIGtleSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICB0aGlzLmRlZmF1bHRIZWFkZXJzW2tleV0gPSB2YWx1ZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHNldERlZmF1bHRSZXF1ZXN0KGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5ICE9PSBudWxsICYmIHR5cGVvZiBrZXkgPT09ICdvYmplY3QnKSB7XG4gICAgICAvLyBrZXkgaXMgYW4gb2JqZWN0XG4gICAgICBPYmplY3QuYXNzaWduKHRoaXMuZGVmYXVsdFJlcXVlc3QsIGtleSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICB0aGlzLmRlZmF1bHRSZXF1ZXN0W2tleV0gPSB2YWx1ZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBHbG9iYWwgaXMgdGhlIGRlZmF1bHQgcmVzaWRlbmN5IChvciByZWdpb24pXG4gICAqIEdsb2JhbCByZWdpb24gbWVhbnMgdGhlIG1lc3NhZ2Ugd2lsbCBiZSBzZW50IHRocm91Z2ggaHR0cHM6Ly9hcGkuc2VuZGdyaWQuY29tXG4gICAqIEVVIHJlZ2lvbiBtZWFucyB0aGUgbWVzc2FnZSB3aWxsIGJlIHNlbnQgdGhyb3VnaCBodHRwczovL2FwaS5ldS5zZW5kZ3JpZC5jb21cbiAgICoqL1xuICBzZXREYXRhUmVzaWRlbmN5KHJlZ2lvbikge1xuICAgIGlmICghUkVHSU9OX0hPU1RfTUFQLmhhc093blByb3BlcnR5KHJlZ2lvbikpIHtcbiAgICAgIGNvbnNvbGUud2FybignUmVnaW9uIGNhbiBvbmx5IGJlIFwiZ2xvYmFsXCIgb3IgXCJldVwiLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNlbmRncmlkX3JlZ2lvbiA9IHJlZ2lvbjtcbiAgICAgIHRoaXMuc2V0RGVmYXVsdFJlcXVlc3QoJ2Jhc2VVcmwnLCBSRUdJT05fSE9TVF9NQVBbcmVnaW9uXSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgY3JlYXRlSGVhZGVycyhkYXRhKSB7XG4gICAgLy8gTWVyZ2UgZGF0YSB3aXRoIGRlZmF1bHQgaGVhZGVycy5cbiAgICBjb25zdCBoZWFkZXJzID0gbWVyZ2VEYXRhKHRoaXMuZGVmYXVsdEhlYWRlcnMsIGRhdGEpO1xuXG4gICAgLy8gQWRkIGF1dGgsIGJ1dCBkb24ndCBvdmVyd3JpdGUgaWYgaGVhZGVyIGFscmVhZHkgc2V0LlxuICAgIGlmICh0eXBlb2YgaGVhZGVycy5BdXRob3JpemF0aW9uID09PSAndW5kZWZpbmVkJyAmJiB0aGlzLmF1dGgpIHtcbiAgICAgIGhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IHRoaXMuYXV0aDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pbXBlcnNvbmF0ZVN1YnVzZXIpIHtcbiAgICAgIGhlYWRlcnNbJ09uLUJlaGFsZi1PZiddID0gdGhpcy5pbXBlcnNvbmF0ZVN1YnVzZXI7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhlYWRlcnM7XG4gIH1cblxuICBjcmVhdGVSZXF1ZXN0KGRhdGEpIHtcbiAgICBsZXQgb3B0aW9ucyA9IHtcbiAgICAgIHVybDogZGF0YS51cmkgfHwgZGF0YS51cmwsXG4gICAgICBiYXNlVXJsOiBkYXRhLmJhc2VVcmwsXG4gICAgICBtZXRob2Q6IGRhdGEubWV0aG9kLFxuICAgICAgZGF0YTogZGF0YS5ib2R5LFxuICAgICAgcGFyYW1zOiBkYXRhLnFzLFxuICAgICAgaGVhZGVyczogZGF0YS5oZWFkZXJzLFxuICAgIH07XG5cbiAgICAvLyBNZXJnZSBkYXRhIHdpdGggZGVmYXVsdCByZXF1ZXN0LlxuICAgIG9wdGlvbnMgPSBtZXJnZURhdGEodGhpcy5kZWZhdWx0UmVxdWVzdCwgb3B0aW9ucyk7XG4gICAgb3B0aW9ucy5oZWFkZXJzID0gdGhpcy5jcmVhdGVIZWFkZXJzKG9wdGlvbnMuaGVhZGVycyk7XG4gICAgb3B0aW9ucy5iYXNlVVJMID0gb3B0aW9ucy5iYXNlVXJsO1xuICAgIGRlbGV0ZSBvcHRpb25zLmJhc2VVcmw7XG5cbiAgICByZXR1cm4gb3B0aW9ucztcbiAgfVxuXG4gIHJlcXVlc3QoZGF0YSwgY2IpIHtcbiAgICBkYXRhID0gdGhpcy5jcmVhdGVSZXF1ZXN0KGRhdGEpO1xuXG4gICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGF4aW9zKGRhdGEpXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgICByZXR1cm4gcmVzb2x2ZShbXG4gICAgICAgICAgICBuZXcgUmVzcG9uc2UocmVzcG9uc2Uuc3RhdHVzLCByZXNwb25zZS5kYXRhLCByZXNwb25zZS5oZWFkZXJzKSxcbiAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICAgICAgXSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2Uuc3RhdHVzID49IDQwMCkge1xuICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBSZXNwb25zZUVycm9yKGVycm9yLnJlc3BvbnNlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxuICAgIC8vIFRocm93IGFuIGVycm9yIGluIGNhc2UgYSBjYWxsYmFjayBmdW5jdGlvbiB3YXMgbm90IHBhc3NlZC5cbiAgICBpZiAoY2IgJiYgdHlwZW9mIGNiICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NhbGxiYWNrIHBhc3NlZCBpcyBub3QgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBpZiAoY2IpIHtcbiAgICAgIHJldHVybiBwcm9taXNlXG4gICAgICAgIC50aGVuKHJlc3VsdCA9PiBjYihudWxsLCByZXN1bHQpKVxuICAgICAgICAuY2F0Y2goZXJyb3IgPT4gY2IoZXJyb3IsIG51bGwpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvbWlzZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENsaWVudDtcbiJdLCJuYW1lcyI6WyJheGlvcyIsInJlcXVpcmUiLCJwa2ciLCJoZWxwZXJzIiwibWVyZ2VEYXRhIiwiY2xhc3NlcyIsIlJlc3BvbnNlIiwiUmVzcG9uc2VFcnJvciIsIkFQSV9LRVlfUFJFRklYIiwiU0VOREdSSURfQkFTRV9VUkwiLCJUV0lMSU9fQkFTRV9VUkwiLCJTRU5ER1JJRF9SRUdJT04iLCJSRUdJT05fSE9TVF9NQVAiLCJldSIsImdsb2JhbCIsIkNsaWVudCIsImNvbnN0cnVjdG9yIiwiYXV0aCIsImltcGVyc29uYXRlU3VidXNlciIsInNlbmRncmlkX3JlZ2lvbiIsImRlZmF1bHRIZWFkZXJzIiwiQWNjZXB0IiwidmVyc2lvbiIsImRlZmF1bHRSZXF1ZXN0IiwiYmFzZVVybCIsInVybCIsIm1ldGhvZCIsImhlYWRlcnMiLCJtYXhDb250ZW50TGVuZ3RoIiwiSW5maW5pdHkiLCJtYXhCb2R5TGVuZ3RoIiwic2V0QXBpS2V5IiwiYXBpS2V5Iiwic2V0RGVmYXVsdFJlcXVlc3QiLCJpc1ZhbGlkQXBpS2V5IiwiY29uc29sZSIsIndhcm4iLCJzZXRUd2lsaW9FbWFpbEF1dGgiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiYjY0QXV0aCIsIkJ1ZmZlciIsImZyb20iLCJ0b1N0cmluZyIsImlzVmFsaWRUd2lsaW9BdXRoIiwiaXNTdHJpbmciLCJ0cmltIiwic3RhcnRzV2l0aCIsInZhbHVlIiwiU3RyaW5nIiwic2V0SW1wZXJzb25hdGVTdWJ1c2VyIiwic3VidXNlciIsInNldERlZmF1bHRIZWFkZXIiLCJrZXkiLCJPYmplY3QiLCJhc3NpZ24iLCJzZXREYXRhUmVzaWRlbmN5IiwicmVnaW9uIiwiaGFzT3duUHJvcGVydHkiLCJjcmVhdGVIZWFkZXJzIiwiZGF0YSIsIkF1dGhvcml6YXRpb24iLCJjcmVhdGVSZXF1ZXN0Iiwib3B0aW9ucyIsInVyaSIsImJvZHkiLCJwYXJhbXMiLCJxcyIsImJhc2VVUkwiLCJyZXF1ZXN0IiwiY2IiLCJwcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ0aGVuIiwicmVzcG9uc2UiLCJzdGF0dXMiLCJjYXRjaCIsImVycm9yIiwiRXJyb3IiLCJyZXN1bHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/client/src/classes/client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/client/src/client.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sendgrid/client/src/client.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Dependencies\n */ const Client = __webpack_require__(/*! ./classes/client */ \"(rsc)/./node_modules/@sendgrid/client/src/classes/client.js\");\n//Export singleton instance\nmodule.exports = new Client();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2NsaWVudC9zcmMvY2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUE7O0NBRUMsR0FDRCxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUV2QiwyQkFBMkI7QUFDM0JDLE9BQU9DLE9BQU8sR0FBRyxJQUFJSCIsInNvdXJjZXMiOlsid2VicGFjazovL3JlY2lwZS1rZWVwZXIvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2NsaWVudC9zcmMvY2xpZW50LmpzP2VlOTQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERlcGVuZGVuY2llc1xuICovXG5jb25zdCBDbGllbnQgPSByZXF1aXJlKCcuL2NsYXNzZXMvY2xpZW50Jyk7XG5cbi8vRXhwb3J0IHNpbmdsZXRvbiBpbnN0YW5jZVxubW9kdWxlLmV4cG9ydHMgPSBuZXcgQ2xpZW50KCk7XG4iXSwibmFtZXMiOlsiQ2xpZW50IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/client/src/client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/classes/attachment.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/classes/attachment.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Dependencies\n */ const toCamelCase = __webpack_require__(/*! ../helpers/to-camel-case */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/to-camel-case.js\");\nconst toSnakeCase = __webpack_require__(/*! ../helpers/to-snake-case */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/to-snake-case.js\");\nconst deepClone = __webpack_require__(/*! ../helpers/deep-clone */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/deep-clone.js\");\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst path = __webpack_require__(/*! path */ \"path\");\n/**\n * Attachment class\n */ class Attachment {\n    /**\n   * Constructor\n   */ constructor(data){\n        //Create from data\n        if (data) {\n            this.fromData(data);\n        }\n    }\n    /**\n   * From data\n   */ fromData(data) {\n        //Expecting object\n        if (typeof data !== \"object\") {\n            throw new Error(\"Expecting object for Mail data\");\n        }\n        //Convert to camel case to make it workable, making a copy to prevent\n        //changes to the original objects\n        data = deepClone(data);\n        data = toCamelCase(data);\n        //Extract properties from data\n        const { content, filename, type, disposition, contentId, filePath } = data;\n        if (typeof content !== \"undefined\" && typeof filePath !== \"undefined\") {\n            throw new Error(\"The props 'content' and 'filePath' cannot be used together.\");\n        }\n        //Set data\n        this.setFilename(filename);\n        this.setType(type);\n        this.setDisposition(disposition);\n        this.setContentId(contentId);\n        this.setContent(filePath ? this.readFile(filePath) : content);\n    }\n    /**\n   * Read a file and return its content as base64\n   */ readFile(filePath) {\n        return fs.readFileSync(path.resolve(filePath));\n    }\n    /**\n   * Set content\n   */ setContent(content) {\n        //Duck type check toString on content if it's a Buffer as that's the method that will be called.\n        if (typeof content === \"string\") {\n            this.content = content;\n            return;\n        } else if (content instanceof Buffer && content.toString !== undefined) {\n            this.content = content.toString();\n            if (this.disposition === \"attachment\") {\n                this.content = content.toString(\"base64\");\n            }\n            return;\n        }\n        throw new Error(\"`content` expected to be either Buffer or string\");\n    }\n    /**\n   * Set content\n   */ setFileContent(content) {\n        if (content instanceof Buffer && content.toString !== undefined) {\n            this.content = content.toString(\"base64\");\n            return;\n        }\n        throw new Error(\"`content` expected to be Buffer\");\n    }\n    /**\n   * Set filename\n   */ setFilename(filename) {\n        if (typeof filename === \"undefined\") {\n            return;\n        }\n        if (filename && typeof filename !== \"string\") {\n            throw new Error(\"String expected for `filename`\");\n        }\n        this.filename = filename;\n    }\n    /**\n   * Set type\n   */ setType(type) {\n        if (typeof type === \"undefined\") {\n            return;\n        }\n        if (typeof type !== \"string\") {\n            throw new Error(\"String expected for `type`\");\n        }\n        this.type = type;\n    }\n    /**\n   * Set disposition\n   */ setDisposition(disposition) {\n        if (typeof disposition === \"undefined\") {\n            return;\n        }\n        if (typeof disposition !== \"string\") {\n            throw new Error(\"String expected for `disposition`\");\n        }\n        this.disposition = disposition;\n    }\n    /**\n   * Set content ID\n   */ setContentId(contentId) {\n        if (typeof contentId === \"undefined\") {\n            return;\n        }\n        if (typeof contentId !== \"string\") {\n            throw new Error(\"String expected for `contentId`\");\n        }\n        this.contentId = contentId;\n    }\n    /**\n   * To JSON\n   */ toJSON() {\n        //Extract properties from self\n        const { content, filename, type, disposition, contentId } = this;\n        //Initialize with mandatory properties\n        const json = {\n            content,\n            filename\n        };\n        //Add whatever else we have\n        if (typeof type !== \"undefined\") {\n            json.type = type;\n        }\n        if (typeof disposition !== \"undefined\") {\n            json.disposition = disposition;\n        }\n        if (typeof contentId !== \"undefined\") {\n            json.contentId = contentId;\n        }\n        //Return\n        return toSnakeCase(json);\n    }\n}\n//Export class\nmodule.exports = Attachment;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/classes/attachment.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/classes/email-address.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/classes/email-address.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Dependencies\n */ const splitNameEmail = __webpack_require__(/*! ../helpers/split-name-email */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/split-name-email.js\");\n/**\n * Email address class\n */ class EmailAddress {\n    /**\n\t * Constructor\n\t */ constructor(data){\n        //Construct from data\n        if (data) {\n            this.fromData(data);\n        }\n    }\n    /**\n   * From data\n   */ fromData(data) {\n        //String given\n        if (typeof data === \"string\") {\n            const [name, email] = splitNameEmail(data);\n            data = {\n                name,\n                email\n            };\n        }\n        //Expecting object\n        if (typeof data !== \"object\") {\n            throw new Error(\"Expecting object or string for EmailAddress data\");\n        }\n        //Extract name and email\n        const { name, email } = data;\n        //Set\n        this.setEmail(email);\n        this.setName(name);\n    }\n    /**\n   * Set name\n   */ setName(name) {\n        if (typeof name === \"undefined\") {\n            return;\n        }\n        if (typeof name !== \"string\") {\n            throw new Error(\"String expected for `name`\");\n        }\n        this.name = name;\n    }\n    /**\n   * Set email (mandatory)\n   */ setEmail(email) {\n        if (typeof email === \"undefined\") {\n            throw new Error(\"Must provide `email`\");\n        }\n        if (typeof email !== \"string\") {\n            throw new Error(\"String expected for `email`\");\n        }\n        this.email = email;\n    }\n    /**\n\t * To JSON\n\t */ toJSON() {\n        //Get properties\n        const { email, name } = this;\n        //Initialize with mandatory properties\n        const json = {\n            email\n        };\n        //Add name if present\n        if (name !== \"\") {\n            json.name = name;\n        }\n        //Return\n        return json;\n    }\n    /**************************************************************************\n   * Static helpers\n   ***/ /**\n   * Create an EmailAddress instance from given data\n   */ static create(data) {\n        //Array?\n        if (Array.isArray(data)) {\n            return data.filter((item)=>!!item).map((item)=>this.create(item));\n        }\n        //Already instance of EmailAddress class?\n        if (data instanceof EmailAddress) {\n            return data;\n        }\n        //Create instance\n        return new EmailAddress(data);\n    }\n}\n//Export class\nmodule.exports = EmailAddress;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvY2xhc3Nlcy9lbWFpbC1hZGRyZXNzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUE7O0NBRUMsR0FDRCxNQUFNQSxpQkFBaUJDLG1CQUFPQSxDQUFDO0FBRS9COztDQUVDLEdBQ0QsTUFBTUM7SUFFSjs7RUFFQSxHQUNBQyxZQUFZQyxJQUFJLENBQUU7UUFFaEIscUJBQXFCO1FBQ3JCLElBQUlBLE1BQU07WUFDUixJQUFJLENBQUNDLFFBQVEsQ0FBQ0Q7UUFDaEI7SUFDRjtJQUVBOztHQUVDLEdBQ0RDLFNBQVNELElBQUksRUFBRTtRQUViLGNBQWM7UUFDZCxJQUFJLE9BQU9BLFNBQVMsVUFBVTtZQUM1QixNQUFNLENBQUNFLE1BQU1DLE1BQU0sR0FBR1AsZUFBZUk7WUFDckNBLE9BQU87Z0JBQUNFO2dCQUFNQztZQUFLO1FBQ3JCO1FBRUEsa0JBQWtCO1FBQ2xCLElBQUksT0FBT0gsU0FBUyxVQUFVO1lBQzVCLE1BQU0sSUFBSUksTUFBTTtRQUNsQjtRQUVBLHdCQUF3QjtRQUN4QixNQUFNLEVBQUNGLElBQUksRUFBRUMsS0FBSyxFQUFDLEdBQUdIO1FBRXRCLEtBQUs7UUFDTCxJQUFJLENBQUNLLFFBQVEsQ0FBQ0Y7UUFDZCxJQUFJLENBQUNHLE9BQU8sQ0FBQ0o7SUFDZjtJQUVBOztHQUVDLEdBQ0RJLFFBQVFKLElBQUksRUFBRTtRQUNaLElBQUksT0FBT0EsU0FBUyxhQUFhO1lBQy9CO1FBQ0Y7UUFDQSxJQUFJLE9BQU9BLFNBQVMsVUFBVTtZQUM1QixNQUFNLElBQUlFLE1BQU07UUFDbEI7UUFDQSxJQUFJLENBQUNGLElBQUksR0FBR0E7SUFDZDtJQUVBOztHQUVDLEdBQ0RHLFNBQVNGLEtBQUssRUFBRTtRQUNkLElBQUksT0FBT0EsVUFBVSxhQUFhO1lBQ2hDLE1BQU0sSUFBSUMsTUFBTTtRQUNsQjtRQUNBLElBQUksT0FBT0QsVUFBVSxVQUFVO1lBQzdCLE1BQU0sSUFBSUMsTUFBTTtRQUNsQjtRQUNBLElBQUksQ0FBQ0QsS0FBSyxHQUFHQTtJQUNmO0lBRUE7O0VBRUEsR0FDQUksU0FBUztRQUVQLGdCQUFnQjtRQUNoQixNQUFNLEVBQUNKLEtBQUssRUFBRUQsSUFBSSxFQUFDLEdBQUcsSUFBSTtRQUUxQixzQ0FBc0M7UUFDdEMsTUFBTU0sT0FBTztZQUFDTDtRQUFLO1FBRW5CLHFCQUFxQjtRQUNyQixJQUFJRCxTQUFTLElBQUk7WUFDZk0sS0FBS04sSUFBSSxHQUFHQTtRQUNkO1FBRUEsUUFBUTtRQUNSLE9BQU9NO0lBQ1Q7SUFFQTs7S0FFRyxHQUVIOztHQUVDLEdBQ0QsT0FBT0MsT0FBT1QsSUFBSSxFQUFFO1FBRWxCLFFBQVE7UUFDUixJQUFJVSxNQUFNQyxPQUFPLENBQUNYLE9BQU87WUFDdkIsT0FBT0EsS0FDSlksTUFBTSxDQUFDQyxDQUFBQSxPQUFRLENBQUMsQ0FBQ0EsTUFDakJDLEdBQUcsQ0FBQ0QsQ0FBQUEsT0FBUSxJQUFJLENBQUNKLE1BQU0sQ0FBQ0k7UUFDN0I7UUFFQSx5Q0FBeUM7UUFDekMsSUFBSWIsZ0JBQWdCRixjQUFjO1lBQ2hDLE9BQU9FO1FBQ1Q7UUFFQSxpQkFBaUI7UUFDakIsT0FBTyxJQUFJRixhQUFhRTtJQUMxQjtBQUNGO0FBRUEsY0FBYztBQUNkZSxPQUFPQyxPQUFPLEdBQUdsQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlY2lwZS1rZWVwZXIvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvY2xhc3Nlcy9lbWFpbC1hZGRyZXNzLmpzPzIxMjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERlcGVuZGVuY2llc1xuICovXG5jb25zdCBzcGxpdE5hbWVFbWFpbCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvc3BsaXQtbmFtZS1lbWFpbCcpO1xuXG4vKipcbiAqIEVtYWlsIGFkZHJlc3MgY2xhc3NcbiAqL1xuY2xhc3MgRW1haWxBZGRyZXNzIHtcblxuICAvKipcblx0ICogQ29uc3RydWN0b3Jcblx0ICovXG4gIGNvbnN0cnVjdG9yKGRhdGEpIHtcblxuICAgIC8vQ29uc3RydWN0IGZyb20gZGF0YVxuICAgIGlmIChkYXRhKSB7XG4gICAgICB0aGlzLmZyb21EYXRhKGRhdGEpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBGcm9tIGRhdGFcbiAgICovXG4gIGZyb21EYXRhKGRhdGEpIHtcblxuICAgIC8vU3RyaW5nIGdpdmVuXG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykge1xuICAgICAgY29uc3QgW25hbWUsIGVtYWlsXSA9IHNwbGl0TmFtZUVtYWlsKGRhdGEpO1xuICAgICAgZGF0YSA9IHtuYW1lLCBlbWFpbH07XG4gICAgfVxuXG4gICAgLy9FeHBlY3Rpbmcgb2JqZWN0XG4gICAgaWYgKHR5cGVvZiBkYXRhICE9PSAnb2JqZWN0Jykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3Rpbmcgb2JqZWN0IG9yIHN0cmluZyBmb3IgRW1haWxBZGRyZXNzIGRhdGEnKTtcbiAgICB9XG5cbiAgICAvL0V4dHJhY3QgbmFtZSBhbmQgZW1haWxcbiAgICBjb25zdCB7bmFtZSwgZW1haWx9ID0gZGF0YTtcblxuICAgIC8vU2V0XG4gICAgdGhpcy5zZXRFbWFpbChlbWFpbCk7XG4gICAgdGhpcy5zZXROYW1lKG5hbWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCBuYW1lXG4gICAqL1xuICBzZXROYW1lKG5hbWUpIHtcbiAgICBpZiAodHlwZW9mIG5hbWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignU3RyaW5nIGV4cGVjdGVkIGZvciBgbmFtZWAnKTtcbiAgICB9XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgZW1haWwgKG1hbmRhdG9yeSlcbiAgICovXG4gIHNldEVtYWlsKGVtYWlsKSB7XG4gICAgaWYgKHR5cGVvZiBlbWFpbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTXVzdCBwcm92aWRlIGBlbWFpbGAnKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBlbWFpbCAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignU3RyaW5nIGV4cGVjdGVkIGZvciBgZW1haWxgJyk7XG4gICAgfVxuICAgIHRoaXMuZW1haWwgPSBlbWFpbDtcbiAgfVxuXG4gIC8qKlxuXHQgKiBUbyBKU09OXG5cdCAqL1xuICB0b0pTT04oKSB7XG5cbiAgICAvL0dldCBwcm9wZXJ0aWVzXG4gICAgY29uc3Qge2VtYWlsLCBuYW1lfSA9IHRoaXM7XG5cbiAgICAvL0luaXRpYWxpemUgd2l0aCBtYW5kYXRvcnkgcHJvcGVydGllc1xuICAgIGNvbnN0IGpzb24gPSB7ZW1haWx9O1xuXG4gICAgLy9BZGQgbmFtZSBpZiBwcmVzZW50XG4gICAgaWYgKG5hbWUgIT09ICcnKSB7XG4gICAgICBqc29uLm5hbWUgPSBuYW1lO1xuICAgIH1cblxuICAgIC8vUmV0dXJuXG4gICAgcmV0dXJuIGpzb247XG4gIH1cblxuICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICogU3RhdGljIGhlbHBlcnNcbiAgICoqKi9cblxuICAvKipcbiAgICogQ3JlYXRlIGFuIEVtYWlsQWRkcmVzcyBpbnN0YW5jZSBmcm9tIGdpdmVuIGRhdGFcbiAgICovXG4gIHN0YXRpYyBjcmVhdGUoZGF0YSkge1xuXG4gICAgLy9BcnJheT9cbiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgcmV0dXJuIGRhdGFcbiAgICAgICAgLmZpbHRlcihpdGVtID0+ICEhaXRlbSlcbiAgICAgICAgLm1hcChpdGVtID0+IHRoaXMuY3JlYXRlKGl0ZW0pKTtcbiAgICB9XG5cbiAgICAvL0FscmVhZHkgaW5zdGFuY2Ugb2YgRW1haWxBZGRyZXNzIGNsYXNzP1xuICAgIGlmIChkYXRhIGluc3RhbmNlb2YgRW1haWxBZGRyZXNzKSB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG5cbiAgICAvL0NyZWF0ZSBpbnN0YW5jZVxuICAgIHJldHVybiBuZXcgRW1haWxBZGRyZXNzKGRhdGEpO1xuICB9XG59XG5cbi8vRXhwb3J0IGNsYXNzXG5tb2R1bGUuZXhwb3J0cyA9IEVtYWlsQWRkcmVzcztcbiJdLCJuYW1lcyI6WyJzcGxpdE5hbWVFbWFpbCIsInJlcXVpcmUiLCJFbWFpbEFkZHJlc3MiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJmcm9tRGF0YSIsIm5hbWUiLCJlbWFpbCIsIkVycm9yIiwic2V0RW1haWwiLCJzZXROYW1lIiwidG9KU09OIiwianNvbiIsImNyZWF0ZSIsIkFycmF5IiwiaXNBcnJheSIsImZpbHRlciIsIml0ZW0iLCJtYXAiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/classes/email-address.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/classes/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/classes/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Expose classes\n */ const Attachment = __webpack_require__(/*! ./attachment */ \"(rsc)/./node_modules/@sendgrid/helpers/classes/attachment.js\");\nconst EmailAddress = __webpack_require__(/*! ./email-address */ \"(rsc)/./node_modules/@sendgrid/helpers/classes/email-address.js\");\nconst Mail = __webpack_require__(/*! ./mail */ \"(rsc)/./node_modules/@sendgrid/helpers/classes/mail.js\");\nconst Personalization = __webpack_require__(/*! ./personalization */ \"(rsc)/./node_modules/@sendgrid/helpers/classes/personalization.js\");\nconst Response = __webpack_require__(/*! ./response */ \"(rsc)/./node_modules/@sendgrid/helpers/classes/response.js\");\nconst ResponseError = __webpack_require__(/*! ./response-error */ \"(rsc)/./node_modules/@sendgrid/helpers/classes/response-error.js\");\nconst Statistics = __webpack_require__(/*! ./statistics */ \"(rsc)/./node_modules/@sendgrid/helpers/classes/statistics.js\");\n/**\n * Export\n */ module.exports = {\n    Attachment,\n    EmailAddress,\n    Mail,\n    Personalization,\n    Response,\n    ResponseError,\n    Statistics\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvY2xhc3Nlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBOztDQUVDLEdBQ0QsTUFBTUEsYUFBYUMsbUJBQU9BLENBQUM7QUFDM0IsTUFBTUMsZUFBZUQsbUJBQU9BLENBQUM7QUFDN0IsTUFBTUUsT0FBT0YsbUJBQU9BLENBQUM7QUFDckIsTUFBTUcsa0JBQWtCSCxtQkFBT0EsQ0FBQztBQUNoQyxNQUFNSSxXQUFXSixtQkFBT0EsQ0FBQztBQUN6QixNQUFNSyxnQkFBZ0JMLG1CQUFPQSxDQUFDO0FBQzlCLE1BQU1NLGFBQWFOLG1CQUFPQSxDQUFDO0FBRTNCOztDQUVDLEdBQ0RPLE9BQU9DLE9BQU8sR0FBRztJQUNmVDtJQUNBRTtJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjaXBlLWtlZXBlci8uL25vZGVfbW9kdWxlcy9Ac2VuZGdyaWQvaGVscGVycy9jbGFzc2VzL2luZGV4LmpzPzhiZjMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEV4cG9zZSBjbGFzc2VzXG4gKi9cbmNvbnN0IEF0dGFjaG1lbnQgPSByZXF1aXJlKCcuL2F0dGFjaG1lbnQnKTtcbmNvbnN0IEVtYWlsQWRkcmVzcyA9IHJlcXVpcmUoJy4vZW1haWwtYWRkcmVzcycpO1xuY29uc3QgTWFpbCA9IHJlcXVpcmUoJy4vbWFpbCcpO1xuY29uc3QgUGVyc29uYWxpemF0aW9uID0gcmVxdWlyZSgnLi9wZXJzb25hbGl6YXRpb24nKTtcbmNvbnN0IFJlc3BvbnNlID0gcmVxdWlyZSgnLi9yZXNwb25zZScpO1xuY29uc3QgUmVzcG9uc2VFcnJvciA9IHJlcXVpcmUoJy4vcmVzcG9uc2UtZXJyb3InKTtcbmNvbnN0IFN0YXRpc3RpY3MgPSByZXF1aXJlKCcuL3N0YXRpc3RpY3MnKTtcblxuLyoqXG4gKiBFeHBvcnRcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEF0dGFjaG1lbnQsXG4gIEVtYWlsQWRkcmVzcyxcbiAgTWFpbCxcbiAgUGVyc29uYWxpemF0aW9uLFxuICBSZXNwb25zZSxcbiAgUmVzcG9uc2VFcnJvcixcbiAgU3RhdGlzdGljcyxcbn07XG4iXSwibmFtZXMiOlsiQXR0YWNobWVudCIsInJlcXVpcmUiLCJFbWFpbEFkZHJlc3MiLCJNYWlsIiwiUGVyc29uYWxpemF0aW9uIiwiUmVzcG9uc2UiLCJSZXNwb25zZUVycm9yIiwiU3RhdGlzdGljcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/classes/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/classes/mail.js":
/*!********************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/classes/mail.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Dependencies\n */ const EmailAddress = __webpack_require__(/*! ./email-address */ \"(rsc)/./node_modules/@sendgrid/helpers/classes/email-address.js\");\nconst Personalization = __webpack_require__(/*! ./personalization */ \"(rsc)/./node_modules/@sendgrid/helpers/classes/personalization.js\");\nconst toCamelCase = __webpack_require__(/*! ../helpers/to-camel-case */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/to-camel-case.js\");\nconst toSnakeCase = __webpack_require__(/*! ../helpers/to-snake-case */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/to-snake-case.js\");\nconst deepClone = __webpack_require__(/*! ../helpers/deep-clone */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/deep-clone.js\");\nconst arrayToJSON = __webpack_require__(/*! ../helpers/array-to-json */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/array-to-json.js\");\nconst { DYNAMIC_TEMPLATE_CHAR_WARNING } = __webpack_require__(/*! ../constants */ \"(rsc)/./node_modules/@sendgrid/helpers/constants/index.js\");\nconst { validateMailSettings, validateTrackingSettings } = __webpack_require__(/*! ../helpers/validate-settings */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/validate-settings.js\");\n/**\n * Mail class\n */ class Mail {\n    /**\n   * Constructor\n   */ constructor(data){\n        //Initialize array and object properties\n        this.isDynamic = false;\n        this.hideWarnings = false;\n        this.personalizations = [];\n        this.attachments = [];\n        this.content = [];\n        this.categories = [];\n        this.headers = {};\n        this.sections = {};\n        this.customArgs = {};\n        this.trackingSettings = {};\n        this.mailSettings = {};\n        this.asm = {};\n        //Helper properties\n        this.substitutions = null;\n        this.substitutionWrappers = null;\n        this.dynamicTemplateData = null;\n        //Process data if given\n        if (data) {\n            this.fromData(data);\n        }\n    }\n    /**\n   * Build from data\n   */ fromData(data) {\n        //Expecting object\n        if (typeof data !== \"object\") {\n            throw new Error(\"Expecting object for Mail data\");\n        }\n        //Convert to camel case to make it workable, making a copy to prevent\n        //changes to the original objects\n        data = deepClone(data);\n        data = toCamelCase(data, [\n            \"substitutions\",\n            \"dynamicTemplateData\",\n            \"customArgs\",\n            \"headers\",\n            \"sections\"\n        ]);\n        //Extract properties from data\n        const { to, from, replyTo, cc, bcc, sendAt, subject, text, html, content, templateId, personalizations, attachments, ipPoolName, batchId, sections, headers, categories, category, customArgs, asm, mailSettings, trackingSettings, substitutions, substitutionWrappers, dynamicTemplateData, isMultiple, hideWarnings, replyToList } = data;\n        //Set data\n        this.setFrom(from);\n        this.setReplyTo(replyTo);\n        this.setSubject(subject);\n        this.setSendAt(sendAt);\n        this.setTemplateId(templateId);\n        this.setBatchId(batchId);\n        this.setIpPoolName(ipPoolName);\n        this.setAttachments(attachments);\n        this.setContent(content);\n        this.setSections(sections);\n        this.setHeaders(headers);\n        this.setCategories(category);\n        this.setCategories(categories);\n        this.setCustomArgs(customArgs);\n        this.setAsm(asm);\n        this.setMailSettings(mailSettings);\n        this.setTrackingSettings(trackingSettings);\n        this.setHideWarnings(hideWarnings);\n        this.setReplyToList(replyToList);\n        if (this.isDynamic) {\n            this.setDynamicTemplateData(dynamicTemplateData);\n        } else {\n            this.setSubstitutions(substitutions);\n            this.setSubstitutionWrappers(substitutionWrappers);\n        }\n        //Add contents from text/html properties\n        this.addTextContent(text);\n        this.addHtmlContent(html);\n        //Using \"to\" property for personalizations\n        if (personalizations) {\n            this.setPersonalizations(personalizations);\n        } else if (isMultiple && Array.isArray(to)) {\n            //Multiple individual emails\n            to.forEach((to)=>this.addTo(to, cc, bcc));\n        } else {\n            //Single email (possibly with multiple recipients in the to field)\n            this.addTo(to, cc, bcc);\n        }\n    }\n    /**\n   * Set from email\n   */ setFrom(from) {\n        if (this._checkProperty(\"from\", from, [\n            this._checkUndefined\n        ])) {\n            if (typeof from !== \"string\" && typeof from.email !== \"string\") {\n                throw new Error(\"String or address object expected for `from`\");\n            }\n            this.from = EmailAddress.create(from);\n        }\n    }\n    /**\n   * Set reply to\n   */ setReplyTo(replyTo) {\n        if (this._checkProperty(\"replyTo\", replyTo, [\n            this._checkUndefined\n        ])) {\n            if (typeof replyTo !== \"string\" && typeof replyTo.email !== \"string\") {\n                throw new Error(\"String or address object expected for `replyTo`\");\n            }\n            this.replyTo = EmailAddress.create(replyTo);\n        }\n    }\n    /**\n   * Set subject\n   */ setSubject(subject) {\n        this._setProperty(\"subject\", subject, \"string\");\n    }\n    /**\n   * Set send at\n   */ setSendAt(sendAt) {\n        if (this._checkProperty(\"sendAt\", sendAt, [\n            this._checkUndefined,\n            this._createCheckThatThrows(Number.isInteger, \"Integer expected for `sendAt`\")\n        ])) {\n            this.sendAt = sendAt;\n        }\n    }\n    /**\n   * Set template ID, also checks if the template is dynamic or legacy\n   */ setTemplateId(templateId) {\n        if (this._setProperty(\"templateId\", templateId, \"string\")) {\n            if (templateId.indexOf(\"d-\") === 0) {\n                this.isDynamic = true;\n            }\n        }\n    }\n    /**\n   * Set batch ID\n   */ setBatchId(batchId) {\n        this._setProperty(\"batchId\", batchId, \"string\");\n    }\n    /**\n   * Set IP pool name\n   */ setIpPoolName(ipPoolName) {\n        this._setProperty(\"ipPoolName\", ipPoolName, \"string\");\n    }\n    /**\n   * Set ASM\n   */ setAsm(asm) {\n        if (this._checkProperty(\"asm\", asm, [\n            this._checkUndefined,\n            this._createTypeCheck(\"object\")\n        ])) {\n            if (typeof asm.groupId !== \"number\") {\n                throw new Error(\"Expected `asm` to include an integer in its `groupId` field\");\n            }\n            if (asm.groupsToDisplay && (!Array.isArray(asm.groupsToDisplay) || !asm.groupsToDisplay.every((group)=>typeof group === \"number\"))) {\n                throw new Error(\"Array of integers expected for `asm.groupsToDisplay`\");\n            }\n            this.asm = asm;\n        }\n    }\n    /**\n   * Set personalizations\n   */ setPersonalizations(personalizations) {\n        if (!this._doArrayCheck(\"personalizations\", personalizations)) {\n            return;\n        }\n        if (!personalizations.every((personalization)=>typeof personalization === \"object\")) {\n            throw new Error(\"Array of objects expected for `personalizations`\");\n        }\n        //Clear and use add helper to add one by one\n        this.personalizations = [];\n        personalizations.forEach((personalization)=>this.addPersonalization(personalization));\n    }\n    /**\n   * Add personalization\n   */ addPersonalization(personalization) {\n        //We should either send substitutions or dynamicTemplateData\n        //depending on the templateId\n        if (this.isDynamic && personalization.substitutions) {\n            delete personalization.substitutions;\n        } else if (!this.isDynamic && personalization.dynamicTemplateData) {\n            delete personalization.dynamicTemplateData;\n        }\n        //Convert to class if needed\n        if (!(personalization instanceof Personalization)) {\n            personalization = new Personalization(personalization);\n        }\n        //If this is dynamic, set dynamicTemplateData, or set substitutions\n        if (this.isDynamic) {\n            this.applyDynamicTemplateData(personalization);\n        } else {\n            this.applySubstitutions(personalization);\n        }\n        //Push personalization to array\n        this.personalizations.push(personalization);\n    }\n    /**\n   * Convenience method for quickly creating personalizations\n   */ addTo(to, cc, bcc) {\n        if (typeof to === \"undefined\" && typeof cc === \"undefined\" && typeof bcc === \"undefined\") {\n            throw new Error(\"Provide at least one of to, cc or bcc\");\n        }\n        this.addPersonalization(new Personalization({\n            to,\n            cc,\n            bcc\n        }));\n    }\n    /**\n   * Set substitutions\n   */ setSubstitutions(substitutions) {\n        this._setProperty(\"substitutions\", substitutions, \"object\");\n    }\n    /**\n   * Set substitution wrappers\n   */ setSubstitutionWrappers(substitutionWrappers) {\n        let lengthCheck = (propertyName, value)=>{\n            if (!Array.isArray(value) || value.length !== 2) {\n                throw new Error(\"Array expected with two elements for `\" + propertyName + \"`\");\n            }\n        };\n        if (this._checkProperty(\"substitutionWrappers\", substitutionWrappers, [\n            this._checkUndefined,\n            lengthCheck\n        ])) {\n            this.substitutionWrappers = substitutionWrappers;\n        }\n    }\n    /**\n   * Helper which applies globally set substitutions to personalizations\n   */ applySubstitutions(personalization) {\n        if (personalization instanceof Personalization) {\n            personalization.reverseMergeSubstitutions(this.substitutions);\n            personalization.setSubstitutionWrappers(this.substitutionWrappers);\n        }\n    }\n    /**\n   * Helper which applies globally set dynamic_template_data to personalizations\n   */ applyDynamicTemplateData(personalization) {\n        if (personalization instanceof Personalization) {\n            personalization.deepMergeDynamicTemplateData(this.dynamicTemplateData);\n        }\n    }\n    /**\n   * Set dynamicTemplateData\n   */ setDynamicTemplateData(dynamicTemplateData) {\n        if (typeof dynamicTemplateData === \"undefined\") {\n            return;\n        }\n        if (typeof dynamicTemplateData !== \"object\") {\n            throw new Error(\"Object expected for `dynamicTemplateData`\");\n        }\n        // Check dynamic template for non-escaped characters and warn if found\n        if (!this.hideWarnings) {\n            Object.values(dynamicTemplateData).forEach((value)=>{\n                if (/['\"&]/.test(value)) {\n                    console.warn(DYNAMIC_TEMPLATE_CHAR_WARNING);\n                }\n            });\n        }\n        this.dynamicTemplateData = dynamicTemplateData;\n    }\n    /**\n   * Set content\n   */ setContent(content) {\n        if (this._doArrayCheck(\"content\", content)) {\n            if (!content.every((contentField)=>typeof contentField === \"object\")) {\n                throw new Error(\"Expected each entry in `content` to be an object\");\n            }\n            if (!content.every((contentField)=>typeof contentField.type === \"string\")) {\n                throw new Error(\"Expected each `content` entry to contain a `type` string\");\n            }\n            if (!content.every((contentField)=>typeof contentField.value === \"string\")) {\n                throw new Error(\"Expected each `content` entry to contain a `value` string\");\n            }\n            this.content = content;\n        }\n    }\n    /**\n   * Add content\n   */ addContent(content) {\n        if (this._checkProperty(\"content\", content, [\n            this._createTypeCheck(\"object\")\n        ])) {\n            this.content.push(content);\n        }\n    }\n    /**\n   * Add text content\n   */ addTextContent(text) {\n        if (this._checkProperty(\"text\", text, [\n            this._checkUndefined,\n            this._createTypeCheck(\"string\")\n        ])) {\n            this.addContent({\n                value: text,\n                type: \"text/plain\"\n            });\n        }\n    }\n    /**\n   * Add HTML content\n   */ addHtmlContent(html) {\n        if (this._checkProperty(\"html\", html, [\n            this._checkUndefined,\n            this._createTypeCheck(\"string\")\n        ])) {\n            this.addContent({\n                value: html,\n                type: \"text/html\"\n            });\n        }\n    }\n    /**\n   * Set attachments\n   */ setAttachments(attachments) {\n        if (this._doArrayCheck(\"attachments\", attachments)) {\n            if (!attachments.every((attachment)=>typeof attachment.content === \"string\")) {\n                throw new Error(\"Expected each attachment to contain a `content` string\");\n            }\n            if (!attachments.every((attachment)=>typeof attachment.filename === \"string\")) {\n                throw new Error(\"Expected each attachment to contain a `filename` string\");\n            }\n            if (!attachments.every((attachment)=>!attachment.type || typeof attachment.type === \"string\")) {\n                throw new Error(\"Expected the attachment's `type` field to be a string\");\n            }\n            if (!attachments.every((attachment)=>!attachment.disposition || typeof attachment.disposition === \"string\")) {\n                throw new Error(\"Expected the attachment's `disposition` field to be a string\");\n            }\n            this.attachments = attachments;\n        }\n    }\n    /**\n   * Add attachment\n   */ addAttachment(attachment) {\n        if (this._checkProperty(\"attachment\", attachment, [\n            this._checkUndefined,\n            this._createTypeCheck(\"object\")\n        ])) {\n            this.attachments.push(attachment);\n        }\n    }\n    /**\n   * Set categories\n   */ setCategories(categories) {\n        let allElementsAreStrings = (propertyName, value)=>{\n            if (!Array.isArray(value) || !value.every((item)=>typeof item === \"string\")) {\n                throw new Error(\"Array of strings expected for `\" + propertyName + \"`\");\n            }\n        };\n        if (typeof categories === \"string\") {\n            categories = [\n                categories\n            ];\n        }\n        if (this._checkProperty(\"categories\", categories, [\n            this._checkUndefined,\n            allElementsAreStrings\n        ])) {\n            this.categories = categories;\n        }\n    }\n    /**\n   * Add category\n   */ addCategory(category) {\n        if (this._checkProperty(\"category\", category, [\n            this._createTypeCheck(\"string\")\n        ])) {\n            this.categories.push(category);\n        }\n    }\n    /**\n   * Set headers\n   */ setHeaders(headers) {\n        this._setProperty(\"headers\", headers, \"object\");\n    }\n    /**\n   * Add a header\n   */ addHeader(key, value) {\n        if (this._checkProperty(\"key\", key, [\n            this._createTypeCheck(\"string\")\n        ]) && this._checkProperty(\"value\", value, [\n            this._createTypeCheck(\"string\")\n        ])) {\n            this.headers[key] = value;\n        }\n    }\n    /**\n   * Set sections\n   */ setSections(sections) {\n        this._setProperty(\"sections\", sections, \"object\");\n    }\n    /**\n   * Set custom args\n   */ setCustomArgs(customArgs) {\n        this._setProperty(\"customArgs\", customArgs, \"object\");\n    }\n    /**\n   * Set tracking settings\n   */ setTrackingSettings(settings) {\n        if (typeof settings === \"undefined\") {\n            return;\n        }\n        validateTrackingSettings(settings);\n        this.trackingSettings = settings;\n    }\n    /**\n   * Set mail settings\n   */ setMailSettings(settings) {\n        if (typeof settings === \"undefined\") {\n            return;\n        }\n        validateMailSettings(settings);\n        this.mailSettings = settings;\n    }\n    /**\n   * Set hide warnings\n   */ setHideWarnings(hide) {\n        if (typeof hide === \"undefined\") {\n            return;\n        }\n        if (typeof hide !== \"boolean\") {\n            throw new Error(\"Boolean expected for `hideWarnings`\");\n        }\n        this.hideWarnings = hide;\n    }\n    /**\n   * To JSON\n   */ toJSON() {\n        //Extract properties from self\n        const { from, replyTo, sendAt, subject, content, templateId, personalizations, attachments, ipPoolName, batchId, asm, sections, headers, categories, customArgs, mailSettings, trackingSettings, replyToList } = this;\n        //Initialize with mandatory values\n        const json = {\n            from,\n            subject,\n            personalizations: arrayToJSON(personalizations)\n        };\n        //Array properties\n        if (Array.isArray(attachments) && attachments.length > 0) {\n            json.attachments = arrayToJSON(attachments);\n        }\n        if (Array.isArray(categories) && categories.length > 0) {\n            json.categories = categories.filter((cat)=>cat !== \"\");\n        }\n        if (Array.isArray(content) && content.length > 0) {\n            json.content = arrayToJSON(content);\n        }\n        //Object properties\n        if (Object.keys(headers).length > 0) {\n            json.headers = headers;\n        }\n        if (Object.keys(mailSettings).length > 0) {\n            json.mailSettings = mailSettings;\n        }\n        if (Object.keys(trackingSettings).length > 0) {\n            json.trackingSettings = trackingSettings;\n        }\n        if (Object.keys(customArgs).length > 0) {\n            json.customArgs = customArgs;\n        }\n        if (Object.keys(sections).length > 0) {\n            json.sections = sections;\n        }\n        if (Object.keys(asm).length > 0) {\n            json.asm = asm;\n        }\n        //Simple properties\n        if (typeof replyTo !== \"undefined\") {\n            json.replyTo = replyTo;\n        }\n        if (typeof sendAt !== \"undefined\") {\n            json.sendAt = sendAt;\n        }\n        if (typeof batchId !== \"undefined\") {\n            json.batchId = batchId;\n        }\n        if (typeof templateId !== \"undefined\") {\n            json.templateId = templateId;\n        }\n        if (typeof ipPoolName !== \"undefined\") {\n            json.ipPoolName = ipPoolName;\n        }\n        if (typeof replyToList !== \"undefined\") {\n            json.replyToList = replyToList;\n        }\n        //Return as snake cased object\n        return toSnakeCase(json, [\n            \"substitutions\",\n            \"dynamicTemplateData\",\n            \"customArgs\",\n            \"headers\",\n            \"sections\"\n        ]);\n    }\n    /**************************************************************************\n   * Static helpers\n   ***/ /**\n   * Create a Mail instance from given data\n   */ static create(data) {\n        //Array?\n        if (Array.isArray(data)) {\n            return data.filter((item)=>!!item).map((item)=>this.create(item));\n        }\n        //Already instance of Mail class?\n        if (data instanceof Mail) {\n            return data;\n        }\n        //Create instance\n        return new Mail(data);\n    }\n    /**************************************************************************\n   * helpers for property-setting checks\n   ***/ /**\n   * Perform a set of checks on the new property value. Returns true if all\n   * checks complete successfully without throwing errors or returning true.\n   */ _checkProperty(propertyName, value, checks) {\n        return !checks.some((e)=>e(propertyName, value));\n    }\n    /**\n   * Set a property with normal undefined and type-checks\n   */ _setProperty(propertyName, value, propertyType) {\n        let propertyChecksPassed = this._checkProperty(propertyName, value, [\n            this._checkUndefined,\n            this._createTypeCheck(propertyType)\n        ]);\n        if (propertyChecksPassed) {\n            this[propertyName] = value;\n        }\n        return propertyChecksPassed;\n    }\n    /**\n   * Fail if the value is undefined.\n   */ _checkUndefined(propertyName, value) {\n        return typeof value === \"undefined\";\n    }\n    /**\n   * Create and return a function that checks for a given type\n   */ _createTypeCheck(propertyType) {\n        return (propertyName, value)=>{\n            if (typeof value !== propertyType) {\n                throw new Error(propertyType + \" expected for `\" + propertyName + \"`\");\n            }\n        };\n    }\n    /**\n   * Create a check out of a callback. If the callback\n   * returns false, the check will throw an error.\n   */ _createCheckThatThrows(check, errorString) {\n        return (propertyName, value)=>{\n            if (!check(value)) {\n                throw new Error(errorString);\n            }\n        };\n    }\n    /**\n   * Set an array property after checking that the new value is an\n   * array.\n   */ _setArrayProperty(propertyName, value) {\n        if (this._doArrayCheck(propertyName, value)) {\n            this[propertyName] = value;\n        }\n    }\n    /**\n   * Check that a value isn't undefined and is an array.\n   */ _doArrayCheck(propertyName, value) {\n        return this._checkProperty(propertyName, value, [\n            this._checkUndefined,\n            this._createCheckThatThrows(Array.isArray, \"Array expected for`\" + propertyName + \"`\")\n        ]);\n    }\n    /**\n   * Set the replyToList from email body\n   */ setReplyToList(replyToList) {\n        if (this._doArrayCheck(\"replyToList\", replyToList) && replyToList.length) {\n            if (!replyToList.every((replyTo)=>replyTo && typeof replyTo.email === \"string\")) {\n                throw new Error(\"Expected each replyTo to contain an `email` string\");\n            }\n            this.replyToList = replyToList;\n        }\n    }\n}\n//Export class\nmodule.exports = Mail;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/classes/mail.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/classes/personalization.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/classes/personalization.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Dependencies\n */ const EmailAddress = __webpack_require__(/*! ./email-address */ \"(rsc)/./node_modules/@sendgrid/helpers/classes/email-address.js\");\nconst toCamelCase = __webpack_require__(/*! ../helpers/to-camel-case */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/to-camel-case.js\");\nconst toSnakeCase = __webpack_require__(/*! ../helpers/to-snake-case */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/to-snake-case.js\");\nconst deepClone = __webpack_require__(/*! ../helpers/deep-clone */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/deep-clone.js\");\nconst deepMerge = __webpack_require__(/*! deepmerge */ \"(rsc)/./node_modules/deepmerge/dist/cjs.js\");\nconst wrapSubstitutions = __webpack_require__(/*! ../helpers/wrap-substitutions */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/wrap-substitutions.js\");\n/**\n * Personalization class\n */ class Personalization {\n    /**\n   * Constructor\n   */ constructor(data){\n        //Init array and object placeholders\n        this.to = [];\n        this.cc = [];\n        this.bcc = [];\n        this.headers = {};\n        this.customArgs = {};\n        this.substitutions = {};\n        this.substitutionWrappers = [\n            \"{{\",\n            \"}}\"\n        ];\n        this.dynamicTemplateData = {};\n        //Build from data if given\n        if (data) {\n            this.fromData(data);\n        }\n    }\n    /**\n   * From data\n   */ fromData(data) {\n        //Expecting object\n        if (typeof data !== \"object\") {\n            throw new Error(\"Expecting object for Mail data\");\n        }\n        //Convert to camel case to make it workable, making a copy to prevent\n        //changes to the original objects\n        data = deepClone(data);\n        data = toCamelCase(data, [\n            \"substitutions\",\n            \"dynamicTemplateData\",\n            \"customArgs\",\n            \"headers\"\n        ]);\n        //Extract properties from data\n        const { to, from, cc, bcc, subject, headers, customArgs, sendAt, substitutions, substitutionWrappers, dynamicTemplateData } = data;\n        //Set data\n        this.setTo(to);\n        this.setFrom(from);\n        this.setCc(cc);\n        this.setBcc(bcc);\n        this.setSubject(subject);\n        this.setHeaders(headers);\n        this.setSubstitutions(substitutions);\n        this.setSubstitutionWrappers(substitutionWrappers);\n        this.setCustomArgs(customArgs);\n        this.setDynamicTemplateData(dynamicTemplateData);\n        this.setSendAt(sendAt);\n    }\n    /**\n   * Set subject\n   */ setSubject(subject) {\n        if (typeof subject === \"undefined\") {\n            return;\n        }\n        if (typeof subject !== \"string\") {\n            throw new Error(\"String expected for `subject`\");\n        }\n        this.subject = subject;\n    }\n    /**\n   * Set send at\n   */ setSendAt(sendAt) {\n        if (typeof sendAt === \"undefined\") {\n            return;\n        }\n        if (!Number.isInteger(sendAt)) {\n            throw new Error(\"Integer expected for `sendAt`\");\n        }\n        this.sendAt = sendAt;\n    }\n    /**\n   * Set to\n   */ setTo(to) {\n        if (typeof to === \"undefined\") {\n            return;\n        }\n        if (!Array.isArray(to)) {\n            to = [\n                to\n            ];\n        }\n        this.to = EmailAddress.create(to);\n    }\n    /**\n   * Set from\n   * */ setFrom(from) {\n        if (typeof from === \"undefined\") {\n            return;\n        }\n        this.from = EmailAddress.create(from);\n    }\n    /**\n   * Add a single to\n   */ addTo(to) {\n        if (typeof to === \"undefined\") {\n            return;\n        }\n        this.to.push(EmailAddress.create(to));\n    }\n    /**\n   * Set cc\n   */ setCc(cc) {\n        if (typeof cc === \"undefined\") {\n            return;\n        }\n        if (!Array.isArray(cc)) {\n            cc = [\n                cc\n            ];\n        }\n        this.cc = EmailAddress.create(cc);\n    }\n    /**\n   * Add a single cc\n   */ addCc(cc) {\n        if (typeof cc === \"undefined\") {\n            return;\n        }\n        this.cc.push(EmailAddress.create(cc));\n    }\n    /**\n   * Set bcc\n   */ setBcc(bcc) {\n        if (typeof bcc === \"undefined\") {\n            return;\n        }\n        if (!Array.isArray(bcc)) {\n            bcc = [\n                bcc\n            ];\n        }\n        this.bcc = EmailAddress.create(bcc);\n    }\n    /**\n   * Add a single bcc\n   */ addBcc(bcc) {\n        if (typeof bcc === \"undefined\") {\n            return;\n        }\n        this.bcc.push(EmailAddress.create(bcc));\n    }\n    /**\n   * Set headers\n   */ setHeaders(headers) {\n        if (typeof headers === \"undefined\") {\n            return;\n        }\n        if (typeof headers !== \"object\" || headers === null) {\n            throw new Error(\"Object expected for `headers`\");\n        }\n        this.headers = headers;\n    }\n    /**\n   * Add a header\n   */ addHeader(key, value) {\n        if (typeof key !== \"string\") {\n            throw new Error(\"String expected for header key\");\n        }\n        if (typeof value !== \"string\") {\n            throw new Error(\"String expected for header value\");\n        }\n        this.headers[key] = value;\n    }\n    /**\n   * Set custom args\n   */ setCustomArgs(customArgs) {\n        if (typeof customArgs === \"undefined\") {\n            return;\n        }\n        if (typeof customArgs !== \"object\" || customArgs === null) {\n            throw new Error(\"Object expected for `customArgs`\");\n        }\n        this.customArgs = customArgs;\n    }\n    /**\n   * Add a custom arg\n   */ addCustomArg(key, value) {\n        if (typeof key !== \"string\") {\n            throw new Error(\"String expected for custom arg key\");\n        }\n        if (typeof value !== \"string\") {\n            throw new Error(\"String expected for custom arg value\");\n        }\n        this.customArgs[key] = value;\n    }\n    /**\n   * Set substitutions\n   */ setSubstitutions(substitutions) {\n        if (typeof substitutions === \"undefined\") {\n            return;\n        }\n        if (typeof substitutions !== \"object\") {\n            throw new Error(\"Object expected for `substitutions`\");\n        }\n        this.substitutions = substitutions;\n    }\n    /**\n   * Add a substitution\n   */ addSubstitution(key, value) {\n        if (typeof key !== \"string\") {\n            throw new Error(\"String expected for substitution key\");\n        }\n        if (typeof value !== \"string\" && typeof value !== \"number\") {\n            throw new Error(\"String or Number expected for substitution value\");\n        }\n        this.substitutions[key] = value;\n    }\n    /**\n   * Reverse merge substitutions, preserving existing ones\n   */ reverseMergeSubstitutions(substitutions) {\n        if (typeof substitutions === \"undefined\" || substitutions === null) {\n            return;\n        }\n        if (typeof substitutions !== \"object\") {\n            throw new Error(\"Object expected for `substitutions` in reverseMergeSubstitutions\");\n        }\n        this.substitutions = Object.assign({}, substitutions, this.substitutions);\n    }\n    /**\n   * Set substitution wrappers\n   */ setSubstitutionWrappers(wrappers) {\n        if (typeof wrappers === \"undefined\" || wrappers === null) {\n            return;\n        }\n        if (!Array.isArray(wrappers) || wrappers.length !== 2) {\n            throw new Error(\"Array expected with two elements for `substitutionWrappers`\");\n        }\n        this.substitutionWrappers = wrappers;\n    }\n    /**\n   * Reverse merge dynamic template data, preserving existing ones\n   */ deepMergeDynamicTemplateData(dynamicTemplateData) {\n        if (typeof dynamicTemplateData === \"undefined\" || dynamicTemplateData === null) {\n            return;\n        }\n        if (typeof dynamicTemplateData !== \"object\") {\n            throw new Error(\"Object expected for `dynamicTemplateData` in deepMergeDynamicTemplateData\");\n        }\n        this.dynamicTemplateData = deepMerge(dynamicTemplateData, this.dynamicTemplateData);\n    }\n    /**\n   * Set dynamic template data\n   */ setDynamicTemplateData(dynamicTemplateData) {\n        if (typeof dynamicTemplateData === \"undefined\") {\n            return;\n        }\n        if (typeof dynamicTemplateData !== \"object\") {\n            throw new Error(\"Object expected for `dynamicTemplateData`\");\n        }\n        this.dynamicTemplateData = dynamicTemplateData;\n    }\n    /**\n   * To JSON\n   */ toJSON() {\n        //Get data from self\n        const { to, from, cc, bcc, subject, headers, customArgs, sendAt, substitutions, substitutionWrappers, dynamicTemplateData } = this;\n        //Initialize with mandatory values\n        const json = {\n            to\n        };\n        //Arrays\n        if (Array.isArray(cc) && cc.length > 0) {\n            json.cc = cc;\n        }\n        if (Array.isArray(bcc) && bcc.length > 0) {\n            json.bcc = bcc;\n        }\n        //Objects\n        if (Object.keys(headers).length > 0) {\n            json.headers = headers;\n        }\n        if (substitutions && Object.keys(substitutions).length > 0) {\n            const [left, right] = substitutionWrappers;\n            json.substitutions = wrapSubstitutions(substitutions, left, right);\n        }\n        if (Object.keys(customArgs).length > 0) {\n            json.customArgs = customArgs;\n        }\n        if (dynamicTemplateData && Object.keys(dynamicTemplateData).length > 0) {\n            json.dynamicTemplateData = dynamicTemplateData;\n        }\n        //Simple properties\n        if (typeof subject !== \"undefined\") {\n            json.subject = subject;\n        }\n        if (typeof sendAt !== \"undefined\") {\n            json.sendAt = sendAt;\n        }\n        if (typeof from !== \"undefined\") {\n            json.from = from;\n        }\n        //Return as snake cased object\n        return toSnakeCase(json, [\n            \"substitutions\",\n            \"dynamicTemplateData\",\n            \"customArgs\",\n            \"headers\"\n        ]);\n    }\n}\n//Export class\nmodule.exports = Personalization;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/classes/personalization.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/classes/response-error.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/classes/response-error.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("\n/**\n * Response error class\n */ class ResponseError extends Error {\n    /**\n   * Constructor\n   */ constructor(response){\n        //Super\n        super();\n        //Extract data from response\n        const { headers, status, statusText, data } = response;\n        //Set data\n        this.code = status;\n        this.message = statusText;\n        this.response = {\n            headers,\n            body: data\n        };\n        //Capture stack trace\n        if (!this.stack) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        //Clean up stack trace\n        const regex = new RegExp(process.cwd() + \"/\", \"gi\");\n        this.stack = this.stack.replace(regex, \"\");\n    }\n    /**\n   * Convert to string\n   */ toString() {\n        const { body } = this.response;\n        let err = `${this.message} (${this.code})`;\n        if (body && Array.isArray(body.errors)) {\n            body.errors.forEach((error)=>{\n                const message = error.message;\n                const field = error.field;\n                const help = error.help;\n                err += `\\n  ${message}\\n    ${field}\\n    ${help}`;\n            });\n        }\n        return err;\n    }\n    /**\n   * Convert to simple object for JSON responses\n   */ toJSON() {\n        const { message, code, response } = this;\n        return {\n            message,\n            code,\n            response\n        };\n    }\n}\n//Export\nmodule.exports = ResponseError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvY2xhc3Nlcy9yZXNwb25zZS1lcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBOztDQUVDLEdBQ0QsTUFBTUEsc0JBQXNCQztJQUUxQjs7R0FFQyxHQUNEQyxZQUFZQyxRQUFRLENBQUU7UUFFcEIsT0FBTztRQUNQLEtBQUs7UUFFTCw0QkFBNEI7UUFDNUIsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsVUFBVSxFQUFFQyxJQUFJLEVBQUUsR0FBR0o7UUFFOUMsVUFBVTtRQUNWLElBQUksQ0FBQ0ssSUFBSSxHQUFHSDtRQUNaLElBQUksQ0FBQ0ksT0FBTyxHQUFHSDtRQUNmLElBQUksQ0FBQ0gsUUFBUSxHQUFHO1lBQUVDO1lBQVNNLE1BQU1IO1FBQUs7UUFFdEMscUJBQXFCO1FBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUNJLEtBQUssRUFBRTtZQUNmVixNQUFNVyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDVixXQUFXO1FBQ2hEO1FBRUEsc0JBQXNCO1FBQ3RCLE1BQU1XLFFBQVEsSUFBSUMsT0FBT0MsUUFBUUMsR0FBRyxLQUFLLEtBQUs7UUFDOUMsSUFBSSxDQUFDTCxLQUFLLEdBQUcsSUFBSSxDQUFDQSxLQUFLLENBQUNNLE9BQU8sQ0FBQ0osT0FBTztJQUN6QztJQUVBOztHQUVDLEdBQ0RLLFdBQVc7UUFDVCxNQUFNLEVBQUVSLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQ1AsUUFBUTtRQUM5QixJQUFJZ0IsTUFBTSxDQUFDLEVBQUUsSUFBSSxDQUFDVixPQUFPLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQ0QsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUMxQyxJQUFJRSxRQUFRVSxNQUFNQyxPQUFPLENBQUNYLEtBQUtZLE1BQU0sR0FBRztZQUN0Q1osS0FBS1ksTUFBTSxDQUFDQyxPQUFPLENBQUNDLENBQUFBO2dCQUNsQixNQUFNZixVQUFVZSxNQUFNZixPQUFPO2dCQUM3QixNQUFNZ0IsUUFBUUQsTUFBTUMsS0FBSztnQkFDekIsTUFBTUMsT0FBT0YsTUFBTUUsSUFBSTtnQkFDdkJQLE9BQU8sQ0FBQyxJQUFJLEVBQUVWLFFBQVEsTUFBTSxFQUFFZ0IsTUFBTSxNQUFNLEVBQUVDLEtBQUssQ0FBQztZQUNwRDtRQUNGO1FBQ0EsT0FBT1A7SUFDVDtJQUVBOztHQUVDLEdBQ0RRLFNBQVM7UUFDUCxNQUFNLEVBQUVsQixPQUFPLEVBQUVELElBQUksRUFBRUwsUUFBUSxFQUFFLEdBQUcsSUFBSTtRQUN4QyxPQUFPO1lBQUVNO1lBQVNEO1lBQU1MO1FBQVM7SUFDbkM7QUFDRjtBQUVBLFFBQVE7QUFDUnlCLE9BQU9DLE9BQU8sR0FBRzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjaXBlLWtlZXBlci8uL25vZGVfbW9kdWxlcy9Ac2VuZGdyaWQvaGVscGVycy9jbGFzc2VzL3Jlc3BvbnNlLWVycm9yLmpzP2I0MzUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFJlc3BvbnNlIGVycm9yIGNsYXNzXG4gKi9cbmNsYXNzIFJlc3BvbnNlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yXG4gICAqL1xuICBjb25zdHJ1Y3RvcihyZXNwb25zZSkge1xuXG4gICAgLy9TdXBlclxuICAgIHN1cGVyKCk7XG5cbiAgICAvL0V4dHJhY3QgZGF0YSBmcm9tIHJlc3BvbnNlXG4gICAgY29uc3QgeyBoZWFkZXJzLCBzdGF0dXMsIHN0YXR1c1RleHQsIGRhdGEgfSA9IHJlc3BvbnNlO1xuXG4gICAgLy9TZXQgZGF0YVxuICAgIHRoaXMuY29kZSA9IHN0YXR1cztcbiAgICB0aGlzLm1lc3NhZ2UgPSBzdGF0dXNUZXh0O1xuICAgIHRoaXMucmVzcG9uc2UgPSB7IGhlYWRlcnMsIGJvZHk6IGRhdGEgfTtcblxuICAgIC8vQ2FwdHVyZSBzdGFjayB0cmFjZVxuICAgIGlmICghdGhpcy5zdGFjaykge1xuICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgdGhpcy5jb25zdHJ1Y3Rvcik7XG4gICAgfVxuXG4gICAgLy9DbGVhbiB1cCBzdGFjayB0cmFjZVxuICAgIGNvbnN0IHJlZ2V4ID0gbmV3IFJlZ0V4cChwcm9jZXNzLmN3ZCgpICsgJy8nLCAnZ2knKTtcbiAgICB0aGlzLnN0YWNrID0gdGhpcy5zdGFjay5yZXBsYWNlKHJlZ2V4LCAnJyk7XG4gIH1cblxuICAvKipcbiAgICogQ29udmVydCB0byBzdHJpbmdcbiAgICovXG4gIHRvU3RyaW5nKCkge1xuICAgIGNvbnN0IHsgYm9keSB9ID0gdGhpcy5yZXNwb25zZTtcbiAgICBsZXQgZXJyID0gYCR7dGhpcy5tZXNzYWdlfSAoJHt0aGlzLmNvZGV9KWA7XG4gICAgaWYgKGJvZHkgJiYgQXJyYXkuaXNBcnJheShib2R5LmVycm9ycykpIHtcbiAgICAgIGJvZHkuZXJyb3JzLmZvckVhY2goZXJyb3IgPT4ge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gZXJyb3IubWVzc2FnZTtcbiAgICAgICAgY29uc3QgZmllbGQgPSBlcnJvci5maWVsZDtcbiAgICAgICAgY29uc3QgaGVscCA9IGVycm9yLmhlbHA7XG4gICAgICAgIGVyciArPSBgXFxuICAke21lc3NhZ2V9XFxuICAgICR7ZmllbGR9XFxuICAgICR7aGVscH1gO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBlcnI7XG4gIH1cblxuICAvKipcbiAgICogQ29udmVydCB0byBzaW1wbGUgb2JqZWN0IGZvciBKU09OIHJlc3BvbnNlc1xuICAgKi9cbiAgdG9KU09OKCkge1xuICAgIGNvbnN0IHsgbWVzc2FnZSwgY29kZSwgcmVzcG9uc2UgfSA9IHRoaXM7XG4gICAgcmV0dXJuIHsgbWVzc2FnZSwgY29kZSwgcmVzcG9uc2UgfTtcbiAgfVxufVxuXG4vL0V4cG9ydFxubW9kdWxlLmV4cG9ydHMgPSBSZXNwb25zZUVycm9yO1xuIl0sIm5hbWVzIjpbIlJlc3BvbnNlRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwicmVzcG9uc2UiLCJoZWFkZXJzIiwic3RhdHVzIiwic3RhdHVzVGV4dCIsImRhdGEiLCJjb2RlIiwibWVzc2FnZSIsImJvZHkiLCJzdGFjayIsImNhcHR1cmVTdGFja1RyYWNlIiwicmVnZXgiLCJSZWdFeHAiLCJwcm9jZXNzIiwiY3dkIiwicmVwbGFjZSIsInRvU3RyaW5nIiwiZXJyIiwiQXJyYXkiLCJpc0FycmF5IiwiZXJyb3JzIiwiZm9yRWFjaCIsImVycm9yIiwiZmllbGQiLCJoZWxwIiwidG9KU09OIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/classes/response-error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/classes/response.js":
/*!************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/classes/response.js ***!
  \************************************************************/
/***/ ((module) => {

eval("\nclass Response {\n    constructor(statusCode, body, headers){\n        this.statusCode = statusCode;\n        this.body = body;\n        this.headers = headers;\n    }\n    toString() {\n        return \"HTTP \" + this.statusCode + \" \" + this.body;\n    }\n}\nmodule.exports = Response;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvY2xhc3Nlcy9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BO0lBQ0pDLFlBQVlDLFVBQVUsRUFBRUMsSUFBSSxFQUFFQyxPQUFPLENBQUU7UUFDckMsSUFBSSxDQUFDRixVQUFVLEdBQUdBO1FBQ2xCLElBQUksQ0FBQ0MsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsT0FBTyxHQUFHQTtJQUNqQjtJQUVBQyxXQUFXO1FBQ1QsT0FBTyxVQUFVLElBQUksQ0FBQ0gsVUFBVSxHQUFHLE1BQU0sSUFBSSxDQUFDQyxJQUFJO0lBQ3BEO0FBQ0Y7QUFFQUcsT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL3JlY2lwZS1rZWVwZXIvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvY2xhc3Nlcy9yZXNwb25zZS5qcz9mODliIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY2xhc3MgUmVzcG9uc2Uge1xuICBjb25zdHJ1Y3RvcihzdGF0dXNDb2RlLCBib2R5LCBoZWFkZXJzKSB7XG4gICAgdGhpcy5zdGF0dXNDb2RlID0gc3RhdHVzQ29kZTtcbiAgICB0aGlzLmJvZHkgPSBib2R5O1xuICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gIH1cblxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gJ0hUVFAgJyArIHRoaXMuc3RhdHVzQ29kZSArICcgJyArIHRoaXMuYm9keTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJlc3BvbnNlO1xuIl0sIm5hbWVzIjpbIlJlc3BvbnNlIiwiY29uc3RydWN0b3IiLCJzdGF0dXNDb2RlIiwiYm9keSIsImhlYWRlcnMiLCJ0b1N0cmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/classes/response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/classes/statistics.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/classes/statistics.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Dependencies\n */ const toCamelCase = __webpack_require__(/*! ../helpers/to-camel-case */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/to-camel-case.js\");\nconst deepClone = __webpack_require__(/*! ../helpers/deep-clone */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/deep-clone.js\");\n/**\n * Options\n */ const AggregatedByOptions = [\n    \"day\",\n    \"week\",\n    \"month\"\n];\nconst CountryOptions = [\n    \"us\",\n    \"ca\"\n];\nconst SortByDirection = [\n    \"desc\",\n    \"asc\"\n];\n/**\n * Statistics class\n */ class Statistics {\n    constructor(data){\n        this.startDate = null;\n        this.endDate = null;\n        this.aggregatedBy = null;\n        if (data) {\n            this.fromData(data);\n        }\n    }\n    /**\n   * Build from data\n   */ fromData(data) {\n        //Expecting object\n        if (typeof data !== \"object\") {\n            throw new Error(\"Expecting object for Statistics data\");\n        }\n        //Convert to camel case to make it workable, making a copy to prevent\n        //changes to the original objects\n        data = deepClone(data);\n        data = toCamelCase(data, [\n            \"substitutions\",\n            \"customArgs\"\n        ]);\n        const { startDate, endDate, aggregatedBy } = data;\n        this.setStartDate(startDate);\n        this.setEndDate(endDate);\n        this.setAggregatedBy(aggregatedBy);\n    }\n    /**\n   * Set startDate\n   */ setStartDate(startDate) {\n        if (typeof startDate === \"undefined\") {\n            throw new Error(\"Date expected for `startDate`\");\n        }\n        if (new Date(startDate) === \"Invalid Date\" || isNaN(new Date(startDate))) {\n            throw new Error(\"Date expected for `startDate`\");\n        }\n        console.log(startDate);\n        this.startDate = new Date(startDate).toISOString().slice(0, 10);\n    }\n    /**\n   * Set endDate\n   */ setEndDate(endDate) {\n        if (typeof endDate === \"undefined\") {\n            this.endDate = new Date().toISOString().slice(0, 10);\n            return;\n        }\n        if (new Date(endDate) === \"Invalid Date\" || isNaN(new Date(endDate))) {\n            throw new Error(\"Date expected for `endDate`\");\n        }\n        this.endDate = new Date(endDate).toISOString().slice(0, 10);\n    }\n    /**\n   * Set aggregatedBy\n   */ setAggregatedBy(aggregatedBy) {\n        if (typeof aggregatedBy === \"undefined\") {\n            return;\n        }\n        if (typeof aggregatedBy === \"string\" && AggregatedByOptions.includes(aggregatedBy.toLowerCase())) {\n            this.aggregatedBy = aggregatedBy;\n        } else {\n            throw new Error(\"Incorrect value for `aggregatedBy`\");\n        }\n    }\n    /**\n   * Get Global\n   */ getGlobal() {\n        const { startDate, endDate, aggregatedBy } = this;\n        return {\n            startDate,\n            endDate,\n            aggregatedBy\n        };\n    }\n    /**\n   * Get Advanced\n   */ getAdvanced(country) {\n        const json = this.getGlobal();\n        if (typeof country === \"undefined\") {\n            return json;\n        }\n        if (typeof country === \"string\" && CountryOptions.includes(country.toLowerCase())) {\n            json.country = country;\n        }\n        return json;\n    }\n    /**\n   * Get Advanced Mailbox Providers\n   */ getAdvancedMailboxProviders(mailBoxProviders) {\n        const json = this.getGlobal();\n        if (typeof mailBoxProviders === \"undefined\") {\n            return json;\n        }\n        if (Array.isArray(mailBoxProviders) && mailBoxProviders.some((x)=>typeof x !== \"string\")) {\n            throw new Error(\"Array of strings expected for `mailboxProviders`\");\n        }\n        json.mailBoxProviders = mailBoxProviders;\n        return json;\n    }\n    /**\n   * Get Advanced Browsers\n   */ getAdvancedBrowsers(browsers) {\n        const json = this.getGlobal();\n        if (typeof browsers === \"undefined\") {\n            return json;\n        }\n        if (Array.isArray(browsers) && browsers.some((x)=>typeof x !== \"string\")) {\n            throw new Error(\"Array of strings expected for `browsers`\");\n        }\n        json.browsers = browsers;\n        return json;\n    }\n    /**\n   * Get Categories\n   */ getCategories(categories) {\n        if (typeof categories === \"undefined\") {\n            throw new Error(\"Array of strings expected for `categories`\");\n        }\n        if (!this._isValidArrayOfStrings(categories)) {\n            throw new Error(\"Array of strings expected for `categories`\");\n        }\n        const json = this.getGlobal();\n        json.categories = categories;\n        return json;\n    }\n    /**\n   * Get Subuser\n   */ getSubuser(subusers) {\n        if (typeof subusers === \"undefined\") {\n            throw new Error(\"Array of strings expected for `subusers`\");\n        }\n        if (!this._isValidArrayOfStrings(subusers)) {\n            throw new Error(\"Array of strings expected for `subusers`\");\n        }\n        const json = this.getGlobal();\n        json.subusers = subusers;\n        return json;\n    }\n    /**\n   * Get Subuser Sum\n   */ getSubuserSum(sortByMetric = \"delivered\", sortByDirection = SortByDirection[0], limit = 5, offset = 0) {\n        if (typeof sortByMetric !== \"string\") {\n            throw new Error(\"string expected for `sortByMetric`\");\n        }\n        if (!SortByDirection.includes(sortByDirection.toLowerCase())) {\n            throw new Error(\"desc or asc expected for `sortByDirection`\");\n        }\n        if (typeof limit !== \"number\") {\n            throw new Error(\"number expected for `limit`\");\n        }\n        if (typeof offset !== \"number\") {\n            throw new Error(\"number expected for `offset`\");\n        }\n        const json = this.getGlobal();\n        json.sortByMetric = sortByMetric;\n        json.sortByDirection = sortByDirection;\n        json.limit = limit;\n        json.offset = offset;\n        return json;\n    }\n    /**\n   * Get Subuser Monthly\n   */ getSubuserMonthly(sortByMetric = \"delivered\", sortByDirection = SortByDirection[0], limit = 5, offset = 0) {\n        if (typeof sortByMetric !== \"string\") {\n            throw new Error(\"string expected for `sortByMetric`\");\n        }\n        if (!SortByDirection.includes(sortByDirection.toLowerCase())) {\n            throw new Error(\"desc or asc expected for `sortByDirection`\");\n        }\n        if (typeof limit !== \"number\") {\n            throw new Error(\"number expected for `limit`\");\n        }\n        if (typeof offset !== \"number\") {\n            throw new Error(\"number expected for `offset`\");\n        }\n        const json = this.getGlobal();\n        json.sortByMetric = sortByMetric;\n        json.sortByDirection = sortByDirection;\n        json.limit = limit;\n        json.offset = offset;\n        return json;\n    }\n    _isValidArrayOfStrings(arr) {\n        if (!Array.isArray(arr)) {\n            return false;\n        }\n        if (arr.length < 1 || arr.some((x)=>typeof x !== \"string\")) {\n            return false;\n        }\n        return true;\n    }\n}\n//Export class\nmodule.exports = Statistics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/classes/statistics.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/constants/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/constants/index.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("\nconst DYNAMIC_TEMPLATE_CHAR_WARNING = `\nContent with characters ', \" or & may need to be escaped with three brackets\n{{{ content }}}\nSee https://sendgrid.com/docs/for-developers/sending-email/using-handlebars/ for more information.`;\nmodule.exports = {\n    DYNAMIC_TEMPLATE_CHAR_WARNING\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvY29uc3RhbnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxnQ0FBZ0MsQ0FBQzs7O2tHQUcyRCxDQUFDO0FBRW5HQyxPQUFPQyxPQUFPLEdBQUc7SUFDZkY7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlY2lwZS1rZWVwZXIvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvY29uc3RhbnRzL2luZGV4LmpzPzQ3YzMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRFlOQU1JQ19URU1QTEFURV9DSEFSX1dBUk5JTkcgPSBgXG5Db250ZW50IHdpdGggY2hhcmFjdGVycyAnLCBcIiBvciAmIG1heSBuZWVkIHRvIGJlIGVzY2FwZWQgd2l0aCB0aHJlZSBicmFja2V0c1xue3t7IGNvbnRlbnQgfX19XG5TZWUgaHR0cHM6Ly9zZW5kZ3JpZC5jb20vZG9jcy9mb3ItZGV2ZWxvcGVycy9zZW5kaW5nLWVtYWlsL3VzaW5nLWhhbmRsZWJhcnMvIGZvciBtb3JlIGluZm9ybWF0aW9uLmA7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBEWU5BTUlDX1RFTVBMQVRFX0NIQVJfV0FSTklORyxcbn07XG4iXSwibmFtZXMiOlsiRFlOQU1JQ19URU1QTEFURV9DSEFSX1dBUk5JTkciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/constants/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/array-to-json.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/array-to-json.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("\n/**\n * Helper to convert an array of objects to JSON\n */ module.exports = function arrayToJSON(arr) {\n    return arr.map((item)=>{\n        if (typeof item === \"object\" && item !== null && typeof item.toJSON === \"function\") {\n            return item.toJSON();\n        }\n        return item;\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy9hcnJheS10by1qc29uLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUE7O0NBRUMsR0FDREEsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLFlBQVlDLEdBQUc7SUFDdkMsT0FBT0EsSUFBSUMsR0FBRyxDQUFDQyxDQUFBQTtRQUNiLElBQUksT0FBT0EsU0FBUyxZQUFZQSxTQUFTLFFBQVEsT0FBT0EsS0FBS0MsTUFBTSxLQUFLLFlBQVk7WUFDbEYsT0FBT0QsS0FBS0MsTUFBTTtRQUNwQjtRQUNBLE9BQU9EO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlY2lwZS1rZWVwZXIvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy9hcnJheS10by1qc29uLmpzPzk0MDgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEhlbHBlciB0byBjb252ZXJ0IGFuIGFycmF5IG9mIG9iamVjdHMgdG8gSlNPTlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGFycmF5VG9KU09OKGFycikge1xuICByZXR1cm4gYXJyLm1hcChpdGVtID0+IHtcbiAgICBpZiAodHlwZW9mIGl0ZW0gPT09ICdvYmplY3QnICYmIGl0ZW0gIT09IG51bGwgJiYgdHlwZW9mIGl0ZW0udG9KU09OID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gaXRlbS50b0pTT04oKTtcbiAgICB9XG4gICAgcmV0dXJuIGl0ZW07XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXJyYXlUb0pTT04iLCJhcnIiLCJtYXAiLCJpdGVtIiwidG9KU09OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/array-to-json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/convert-keys.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/convert-keys.js ***!
  \****************************************************************/
/***/ ((module) => {

eval("\n/**\n * Helper to convert an object's keys\n */ module.exports = function convertKeys(obj, converter, ignored) {\n    //Validate\n    if (typeof obj !== \"object\" || obj === null) {\n        throw new Error(\"Non object passed to convertKeys: \" + obj);\n    }\n    //Ignore arrays\n    if (Array.isArray(obj)) {\n        return obj;\n    }\n    //Ensure array for ignored values\n    if (!Array.isArray(ignored)) {\n        ignored = [];\n    }\n    //Process all properties\n    for(const key in obj){\n        //istanbul ignore else\n        if (obj.hasOwnProperty(key)) {\n            //Convert key to snake case\n            const converted = converter(key);\n            //Recursive for child objects, unless ignored\n            //The ignored check checks both variants of the key\n            if (typeof obj[key] === \"object\" && obj[key] !== null) {\n                if (!ignored.includes(key) && !ignored.includes(converted)) {\n                    obj[key] = convertKeys(obj[key], converter, ignored);\n                }\n            }\n            //Convert key to snake case and set if needed\n            if (converted !== key) {\n                obj[converted] = obj[key];\n                delete obj[key];\n            }\n        }\n    }\n    //Return object\n    return obj;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy9jb252ZXJ0LWtleXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Q0FFQyxHQUNEQSxPQUFPQyxPQUFPLEdBQUcsU0FBU0MsWUFBWUMsR0FBRyxFQUFFQyxTQUFTLEVBQUVDLE9BQU87SUFFM0QsVUFBVTtJQUNWLElBQUksT0FBT0YsUUFBUSxZQUFZQSxRQUFRLE1BQU07UUFDM0MsTUFBTSxJQUFJRyxNQUFNLHVDQUF1Q0g7SUFDekQ7SUFFQSxlQUFlO0lBQ2YsSUFBSUksTUFBTUMsT0FBTyxDQUFDTCxNQUFNO1FBQ3RCLE9BQU9BO0lBQ1Q7SUFFQSxpQ0FBaUM7SUFDakMsSUFBSSxDQUFDSSxNQUFNQyxPQUFPLENBQUNILFVBQVU7UUFDM0JBLFVBQVUsRUFBRTtJQUNkO0lBRUEsd0JBQXdCO0lBQ3hCLElBQUssTUFBTUksT0FBT04sSUFBSztRQUNyQixzQkFBc0I7UUFDdEIsSUFBSUEsSUFBSU8sY0FBYyxDQUFDRCxNQUFNO1lBRTNCLDJCQUEyQjtZQUMzQixNQUFNRSxZQUFZUCxVQUFVSztZQUU1Qiw2Q0FBNkM7WUFDN0MsbURBQW1EO1lBQ25ELElBQUksT0FBT04sR0FBRyxDQUFDTSxJQUFJLEtBQUssWUFBWU4sR0FBRyxDQUFDTSxJQUFJLEtBQUssTUFBTTtnQkFDckQsSUFBSSxDQUFDSixRQUFRTyxRQUFRLENBQUNILFFBQVEsQ0FBQ0osUUFBUU8sUUFBUSxDQUFDRCxZQUFZO29CQUMxRFIsR0FBRyxDQUFDTSxJQUFJLEdBQUdQLFlBQVlDLEdBQUcsQ0FBQ00sSUFBSSxFQUFFTCxXQUFXQztnQkFDOUM7WUFDRjtZQUVBLDZDQUE2QztZQUM3QyxJQUFJTSxjQUFjRixLQUFLO2dCQUNyQk4sR0FBRyxDQUFDUSxVQUFVLEdBQUdSLEdBQUcsQ0FBQ00sSUFBSTtnQkFDekIsT0FBT04sR0FBRyxDQUFDTSxJQUFJO1lBQ2pCO1FBQ0Y7SUFDRjtJQUVBLGVBQWU7SUFDZixPQUFPTjtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjaXBlLWtlZXBlci8uL25vZGVfbW9kdWxlcy9Ac2VuZGdyaWQvaGVscGVycy9oZWxwZXJzL2NvbnZlcnQta2V5cy5qcz80YjdhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBIZWxwZXIgdG8gY29udmVydCBhbiBvYmplY3QncyBrZXlzXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY29udmVydEtleXMob2JqLCBjb252ZXJ0ZXIsIGlnbm9yZWQpIHtcblxuICAvL1ZhbGlkYXRlXG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ05vbiBvYmplY3QgcGFzc2VkIHRvIGNvbnZlcnRLZXlzOiAnICsgb2JqKTtcbiAgfVxuXG4gIC8vSWdub3JlIGFycmF5c1xuICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgcmV0dXJuIG9iajtcbiAgfVxuXG4gIC8vRW5zdXJlIGFycmF5IGZvciBpZ25vcmVkIHZhbHVlc1xuICBpZiAoIUFycmF5LmlzQXJyYXkoaWdub3JlZCkpIHtcbiAgICBpZ25vcmVkID0gW107XG4gIH1cblxuICAvL1Byb2Nlc3MgYWxsIHByb3BlcnRpZXNcbiAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgLy9pc3RhbmJ1bCBpZ25vcmUgZWxzZVxuICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkoa2V5KSkge1xuXG4gICAgICAvL0NvbnZlcnQga2V5IHRvIHNuYWtlIGNhc2VcbiAgICAgIGNvbnN0IGNvbnZlcnRlZCA9IGNvbnZlcnRlcihrZXkpO1xuXG4gICAgICAvL1JlY3Vyc2l2ZSBmb3IgY2hpbGQgb2JqZWN0cywgdW5sZXNzIGlnbm9yZWRcbiAgICAgIC8vVGhlIGlnbm9yZWQgY2hlY2sgY2hlY2tzIGJvdGggdmFyaWFudHMgb2YgdGhlIGtleVxuICAgICAgaWYgKHR5cGVvZiBvYmpba2V5XSA9PT0gJ29iamVjdCcgJiYgb2JqW2tleV0gIT09IG51bGwpIHtcbiAgICAgICAgaWYgKCFpZ25vcmVkLmluY2x1ZGVzKGtleSkgJiYgIWlnbm9yZWQuaW5jbHVkZXMoY29udmVydGVkKSkge1xuICAgICAgICAgIG9ialtrZXldID0gY29udmVydEtleXMob2JqW2tleV0sIGNvbnZlcnRlciwgaWdub3JlZCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy9Db252ZXJ0IGtleSB0byBzbmFrZSBjYXNlIGFuZCBzZXQgaWYgbmVlZGVkXG4gICAgICBpZiAoY29udmVydGVkICE9PSBrZXkpIHtcbiAgICAgICAgb2JqW2NvbnZlcnRlZF0gPSBvYmpba2V5XTtcbiAgICAgICAgZGVsZXRlIG9ialtrZXldO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vUmV0dXJuIG9iamVjdFxuICByZXR1cm4gb2JqO1xufTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY29udmVydEtleXMiLCJvYmoiLCJjb252ZXJ0ZXIiLCJpZ25vcmVkIiwiRXJyb3IiLCJBcnJheSIsImlzQXJyYXkiLCJrZXkiLCJoYXNPd25Qcm9wZXJ0eSIsImNvbnZlcnRlZCIsImluY2x1ZGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/convert-keys.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/deep-clone.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/deep-clone.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n/**\n * Deep cloning helper for objects\n */ module.exports = function deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy9kZWVwLWNsb25lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUE7O0NBRUMsR0FDREEsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLFVBQVVDLEdBQUc7SUFDckMsT0FBT0MsS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxTQUFTLENBQUNIO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjaXBlLWtlZXBlci8uL25vZGVfbW9kdWxlcy9Ac2VuZGdyaWQvaGVscGVycy9oZWxwZXJzL2RlZXAtY2xvbmUuanM/OTUxNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRGVlcCBjbG9uaW5nIGhlbHBlciBmb3Igb2JqZWN0c1xuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRlZXBDbG9uZShvYmopIHtcbiAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkob2JqKSk7XG59O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJkZWVwQ2xvbmUiLCJvYmoiLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/deep-clone.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Expose helpers\n */ const arrayToJSON = __webpack_require__(/*! ./array-to-json */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/array-to-json.js\");\nconst convertKeys = __webpack_require__(/*! ./convert-keys */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/convert-keys.js\");\nconst deepClone = __webpack_require__(/*! ./deep-clone */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/deep-clone.js\");\nconst mergeData = __webpack_require__(/*! ./merge-data */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/merge-data.js\");\nconst splitNameEmail = __webpack_require__(/*! ./split-name-email */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/split-name-email.js\");\nconst toCamelCase = __webpack_require__(/*! ./to-camel-case */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/to-camel-case.js\");\nconst toSnakeCase = __webpack_require__(/*! ./to-snake-case */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/to-snake-case.js\");\nconst wrapSubstitutions = __webpack_require__(/*! ./wrap-substitutions */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/wrap-substitutions.js\");\n/**\n * Export\n */ module.exports = {\n    arrayToJSON,\n    convertKeys,\n    deepClone,\n    mergeData,\n    splitNameEmail,\n    toCamelCase,\n    toSnakeCase,\n    wrapSubstitutions\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBOztDQUVDLEdBQ0QsTUFBTUEsY0FBY0MsbUJBQU9BLENBQUM7QUFDNUIsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUM7QUFDNUIsTUFBTUUsWUFBWUYsbUJBQU9BLENBQUM7QUFDMUIsTUFBTUcsWUFBWUgsbUJBQU9BLENBQUM7QUFDMUIsTUFBTUksaUJBQWlCSixtQkFBT0EsQ0FBQztBQUMvQixNQUFNSyxjQUFjTCxtQkFBT0EsQ0FBQztBQUM1QixNQUFNTSxjQUFjTixtQkFBT0EsQ0FBQztBQUM1QixNQUFNTyxvQkFBb0JQLG1CQUFPQSxDQUFDO0FBRWxDOztDQUVDLEdBQ0RRLE9BQU9DLE9BQU8sR0FBRztJQUNmVjtJQUNBRTtJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztJQUNBQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjaXBlLWtlZXBlci8uL25vZGVfbW9kdWxlcy9Ac2VuZGdyaWQvaGVscGVycy9oZWxwZXJzL2luZGV4LmpzPzUzY2EiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEV4cG9zZSBoZWxwZXJzXG4gKi9cbmNvbnN0IGFycmF5VG9KU09OID0gcmVxdWlyZSgnLi9hcnJheS10by1qc29uJyk7XG5jb25zdCBjb252ZXJ0S2V5cyA9IHJlcXVpcmUoJy4vY29udmVydC1rZXlzJyk7XG5jb25zdCBkZWVwQ2xvbmUgPSByZXF1aXJlKCcuL2RlZXAtY2xvbmUnKTtcbmNvbnN0IG1lcmdlRGF0YSA9IHJlcXVpcmUoJy4vbWVyZ2UtZGF0YScpO1xuY29uc3Qgc3BsaXROYW1lRW1haWwgPSByZXF1aXJlKCcuL3NwbGl0LW5hbWUtZW1haWwnKTtcbmNvbnN0IHRvQ2FtZWxDYXNlID0gcmVxdWlyZSgnLi90by1jYW1lbC1jYXNlJyk7XG5jb25zdCB0b1NuYWtlQ2FzZSA9IHJlcXVpcmUoJy4vdG8tc25ha2UtY2FzZScpO1xuY29uc3Qgd3JhcFN1YnN0aXR1dGlvbnMgPSByZXF1aXJlKCcuL3dyYXAtc3Vic3RpdHV0aW9ucycpO1xuXG4vKipcbiAqIEV4cG9ydFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgYXJyYXlUb0pTT04sXG4gIGNvbnZlcnRLZXlzLFxuICBkZWVwQ2xvbmUsXG4gIG1lcmdlRGF0YSxcbiAgc3BsaXROYW1lRW1haWwsXG4gIHRvQ2FtZWxDYXNlLFxuICB0b1NuYWtlQ2FzZSxcbiAgd3JhcFN1YnN0aXR1dGlvbnMsXG59O1xuIl0sIm5hbWVzIjpbImFycmF5VG9KU09OIiwicmVxdWlyZSIsImNvbnZlcnRLZXlzIiwiZGVlcENsb25lIiwibWVyZ2VEYXRhIiwic3BsaXROYW1lRW1haWwiLCJ0b0NhbWVsQ2FzZSIsInRvU25ha2VDYXNlIiwid3JhcFN1YnN0aXR1dGlvbnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/merge-data.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/merge-data.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n/**\n * Merge data helper\n */ module.exports = function mergeData(base, data) {\n    //Validate data\n    if (typeof base !== \"object\" || base === null) {\n        throw new Error(\"Not an object provided for base\");\n    }\n    if (typeof data !== \"object\" || data === null) {\n        throw new Error(\"Not an object provided for data\");\n    }\n    //Copy base\n    const merged = Object.assign({}, base);\n    //Add data\n    for(const key in data){\n        //istanbul ignore else\n        if (data.hasOwnProperty(key)) {\n            if (data[key] && Array.isArray(data[key])) {\n                merged[key] = data[key];\n            } else if (data[key] && typeof data[key] === \"object\") {\n                merged[key] = Object.assign({}, data[key]);\n            } else if (data[key]) {\n                merged[key] = data[key];\n            }\n        }\n    }\n    //Return\n    return merged;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy9tZXJnZS1kYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUE7O0NBRUMsR0FDREEsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLFVBQVVDLElBQUksRUFBRUMsSUFBSTtJQUU1QyxlQUFlO0lBQ2YsSUFBSSxPQUFPRCxTQUFTLFlBQVlBLFNBQVMsTUFBTTtRQUM3QyxNQUFNLElBQUlFLE1BQU07SUFDbEI7SUFDQSxJQUFJLE9BQU9ELFNBQVMsWUFBWUEsU0FBUyxNQUFNO1FBQzdDLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUVBLFdBQVc7SUFDWCxNQUFNQyxTQUFTQyxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHTDtJQUVqQyxVQUFVO0lBQ1YsSUFBSyxNQUFNTSxPQUFPTCxLQUFNO1FBQ3RCLHNCQUFzQjtRQUN0QixJQUFJQSxLQUFLTSxjQUFjLENBQUNELE1BQU07WUFDNUIsSUFBSUwsSUFBSSxDQUFDSyxJQUFJLElBQUlFLE1BQU1DLE9BQU8sQ0FBQ1IsSUFBSSxDQUFDSyxJQUFJLEdBQUc7Z0JBQ3pDSCxNQUFNLENBQUNHLElBQUksR0FBR0wsSUFBSSxDQUFDSyxJQUFJO1lBQ3pCLE9BQU8sSUFBSUwsSUFBSSxDQUFDSyxJQUFJLElBQUksT0FBT0wsSUFBSSxDQUFDSyxJQUFJLEtBQUssVUFBVTtnQkFDckRILE1BQU0sQ0FBQ0csSUFBSSxHQUFHRixPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHSixJQUFJLENBQUNLLElBQUk7WUFDM0MsT0FBTyxJQUFJTCxJQUFJLENBQUNLLElBQUksRUFBRTtnQkFDcEJILE1BQU0sQ0FBQ0csSUFBSSxHQUFHTCxJQUFJLENBQUNLLElBQUk7WUFDekI7UUFDRjtJQUNGO0lBRUEsUUFBUTtJQUNSLE9BQU9IO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWNpcGUta2VlcGVyLy4vbm9kZV9tb2R1bGVzL0BzZW5kZ3JpZC9oZWxwZXJzL2hlbHBlcnMvbWVyZ2UtZGF0YS5qcz8yMDg1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNZXJnZSBkYXRhIGhlbHBlclxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1lcmdlRGF0YShiYXNlLCBkYXRhKSB7XG5cbiAgLy9WYWxpZGF0ZSBkYXRhXG4gIGlmICh0eXBlb2YgYmFzZSAhPT0gJ29iamVjdCcgfHwgYmFzZSA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcignTm90IGFuIG9iamVjdCBwcm92aWRlZCBmb3IgYmFzZScpO1xuICB9XG4gIGlmICh0eXBlb2YgZGF0YSAhPT0gJ29iamVjdCcgfHwgZGF0YSA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcignTm90IGFuIG9iamVjdCBwcm92aWRlZCBmb3IgZGF0YScpO1xuICB9XG5cbiAgLy9Db3B5IGJhc2VcbiAgY29uc3QgbWVyZ2VkID0gT2JqZWN0LmFzc2lnbih7fSwgYmFzZSk7XG5cbiAgLy9BZGQgZGF0YVxuICBmb3IgKGNvbnN0IGtleSBpbiBkYXRhKSB7XG4gICAgLy9pc3RhbmJ1bCBpZ25vcmUgZWxzZVxuICAgIGlmIChkYXRhLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIGlmIChkYXRhW2tleV0gJiYgQXJyYXkuaXNBcnJheShkYXRhW2tleV0pKSB7XG4gICAgICAgIG1lcmdlZFtrZXldID0gZGF0YVtrZXldO1xuICAgICAgfSBlbHNlIGlmIChkYXRhW2tleV0gJiYgdHlwZW9mIGRhdGFba2V5XSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgbWVyZ2VkW2tleV0gPSBPYmplY3QuYXNzaWduKHt9LCBkYXRhW2tleV0pO1xuICAgICAgfSBlbHNlIGlmIChkYXRhW2tleV0pIHtcbiAgICAgICAgbWVyZ2VkW2tleV0gPSBkYXRhW2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy9SZXR1cm5cbiAgcmV0dXJuIG1lcmdlZDtcbn07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1lcmdlRGF0YSIsImJhc2UiLCJkYXRhIiwiRXJyb3IiLCJtZXJnZWQiLCJPYmplY3QiLCJhc3NpZ24iLCJrZXkiLCJoYXNPd25Qcm9wZXJ0eSIsIkFycmF5IiwiaXNBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/merge-data.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/split-name-email.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/split-name-email.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n/**\n * Split name and email address from string\n */ module.exports = function splitNameEmail(str) {\n    //If no email bracket present, return as is\n    if (str.indexOf(\"<\") === -1) {\n        return [\n            \"\",\n            str\n        ];\n    }\n    //Split into name and email\n    let [name, email] = str.split(\"<\");\n    //Trim and fix up\n    name = name.trim();\n    email = email.replace(\">\", \"\").trim();\n    //Return as array\n    return [\n        name,\n        email\n    ];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy9zcGxpdC1uYW1lLWVtYWlsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUE7O0NBRUMsR0FDREEsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLGVBQWVDLEdBQUc7SUFFMUMsMkNBQTJDO0lBQzNDLElBQUlBLElBQUlDLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRztRQUMzQixPQUFPO1lBQUM7WUFBSUQ7U0FBSTtJQUNsQjtJQUVBLDJCQUEyQjtJQUMzQixJQUFJLENBQUNFLE1BQU1DLE1BQU0sR0FBR0gsSUFBSUksS0FBSyxDQUFDO0lBRTlCLGlCQUFpQjtJQUNqQkYsT0FBT0EsS0FBS0csSUFBSTtJQUNoQkYsUUFBUUEsTUFBTUcsT0FBTyxDQUFDLEtBQUssSUFBSUQsSUFBSTtJQUVuQyxpQkFBaUI7SUFDakIsT0FBTztRQUFDSDtRQUFNQztLQUFNO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjaXBlLWtlZXBlci8uL25vZGVfbW9kdWxlcy9Ac2VuZGdyaWQvaGVscGVycy9oZWxwZXJzL3NwbGl0LW5hbWUtZW1haWwuanM/ZGI1YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3BsaXQgbmFtZSBhbmQgZW1haWwgYWRkcmVzcyBmcm9tIHN0cmluZ1xuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNwbGl0TmFtZUVtYWlsKHN0cikge1xuXG4gIC8vSWYgbm8gZW1haWwgYnJhY2tldCBwcmVzZW50LCByZXR1cm4gYXMgaXNcbiAgaWYgKHN0ci5pbmRleE9mKCc8JykgPT09IC0xKSB7XG4gICAgcmV0dXJuIFsnJywgc3RyXTtcbiAgfVxuXG4gIC8vU3BsaXQgaW50byBuYW1lIGFuZCBlbWFpbFxuICBsZXQgW25hbWUsIGVtYWlsXSA9IHN0ci5zcGxpdCgnPCcpO1xuXG4gIC8vVHJpbSBhbmQgZml4IHVwXG4gIG5hbWUgPSBuYW1lLnRyaW0oKTtcbiAgZW1haWwgPSBlbWFpbC5yZXBsYWNlKCc+JywgJycpLnRyaW0oKTtcblxuICAvL1JldHVybiBhcyBhcnJheVxuICByZXR1cm4gW25hbWUsIGVtYWlsXTtcbn07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNwbGl0TmFtZUVtYWlsIiwic3RyIiwiaW5kZXhPZiIsIm5hbWUiLCJlbWFpbCIsInNwbGl0IiwidHJpbSIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/split-name-email.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/str-to-camel-case.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/str-to-camel-case.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n/**\n * Internal conversion helper\n */ module.exports = function strToCamelCase(str) {\n    if (typeof str !== \"string\") {\n        throw new Error(\"String expected for conversion to snake case\");\n    }\n    return str.trim().replace(/_+|\\-+/g, \" \").replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n        if (Number(match) === 0) {\n            return \"\";\n        }\n        return index === 0 ? match.toLowerCase() : match.toUpperCase();\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy9zdHItdG8tY2FtZWwtY2FzZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBOztDQUVDLEdBQ0RBLE9BQU9DLE9BQU8sR0FBRyxTQUFTQyxlQUFlQyxHQUFHO0lBQzFDLElBQUksT0FBT0EsUUFBUSxVQUFVO1FBQzNCLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE9BQU9ELElBQ0pFLElBQUksR0FDSkMsT0FBTyxDQUFDLFdBQVcsS0FDbkJBLE9BQU8sQ0FBQywyQkFBMkIsU0FBU0MsS0FBSyxFQUFFQyxLQUFLO1FBQ3ZELElBQUlDLE9BQU9GLFdBQVcsR0FBRztZQUN2QixPQUFPO1FBQ1Q7UUFDQSxPQUFPLFVBQVcsSUFBS0EsTUFBTUcsV0FBVyxLQUFLSCxNQUFNSSxXQUFXO0lBQ2hFO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWNpcGUta2VlcGVyLy4vbm9kZV9tb2R1bGVzL0BzZW5kZ3JpZC9oZWxwZXJzL2hlbHBlcnMvc3RyLXRvLWNhbWVsLWNhc2UuanM/MjFkOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogSW50ZXJuYWwgY29udmVyc2lvbiBoZWxwZXJcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzdHJUb0NhbWVsQ2FzZShzdHIpIHtcbiAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdTdHJpbmcgZXhwZWN0ZWQgZm9yIGNvbnZlcnNpb24gdG8gc25ha2UgY2FzZScpO1xuICB9XG4gIHJldHVybiBzdHJcbiAgICAudHJpbSgpXG4gICAgLnJlcGxhY2UoL18rfFxcLSsvZywgJyAnKVxuICAgIC5yZXBsYWNlKC8oPzpeXFx3fFtBLVpdfFxcYlxcd3xcXHMrKS9nLCBmdW5jdGlvbihtYXRjaCwgaW5kZXgpIHtcbiAgICAgIGlmIChOdW1iZXIobWF0Y2gpID09PSAwKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICAgIH1cbiAgICAgIHJldHVybiAoaW5kZXggPT09IDApID8gbWF0Y2gudG9Mb3dlckNhc2UoKSA6IG1hdGNoLnRvVXBwZXJDYXNlKCk7XG4gICAgfSk7XG59O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzdHJUb0NhbWVsQ2FzZSIsInN0ciIsIkVycm9yIiwidHJpbSIsInJlcGxhY2UiLCJtYXRjaCIsImluZGV4IiwiTnVtYmVyIiwidG9Mb3dlckNhc2UiLCJ0b1VwcGVyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/str-to-camel-case.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/str-to-snake-case.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/str-to-snake-case.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n/**\n * Internal conversion helper\n */ module.exports = function strToSnakeCase(str) {\n    if (typeof str !== \"string\") {\n        throw new Error(\"String expected for conversion to snake case\");\n    }\n    return str.trim().replace(/(\\s*\\-*\\b\\w|[A-Z])/g, function($1) {\n        $1 = $1.trim().toLowerCase().replace(\"-\", \"\");\n        return ($1[0] === \"_\" ? \"\" : \"_\") + $1;\n    }).slice(1);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy9zdHItdG8tc25ha2UtY2FzZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBOztDQUVDLEdBQ0RBLE9BQU9DLE9BQU8sR0FBRyxTQUFTQyxlQUFlQyxHQUFHO0lBQzFDLElBQUksT0FBT0EsUUFBUSxVQUFVO1FBQzNCLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE9BQU9ELElBQUlFLElBQUksR0FBR0MsT0FBTyxDQUFDLHVCQUF1QixTQUFTQyxFQUFFO1FBQzFEQSxLQUFLQSxHQUFHRixJQUFJLEdBQUdHLFdBQVcsR0FBR0YsT0FBTyxDQUFDLEtBQUs7UUFDMUMsT0FBTyxDQUFDQyxFQUFFLENBQUMsRUFBRSxLQUFLLE1BQU0sS0FBSyxHQUFFLElBQUtBO0lBQ3RDLEdBQUdFLEtBQUssQ0FBQztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjaXBlLWtlZXBlci8uL25vZGVfbW9kdWxlcy9Ac2VuZGdyaWQvaGVscGVycy9oZWxwZXJzL3N0ci10by1zbmFrZS1jYXNlLmpzPzRmYWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEludGVybmFsIGNvbnZlcnNpb24gaGVscGVyXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3RyVG9TbmFrZUNhc2Uoc3RyKSB7XG4gIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBFcnJvcignU3RyaW5nIGV4cGVjdGVkIGZvciBjb252ZXJzaW9uIHRvIHNuYWtlIGNhc2UnKTtcbiAgfVxuICByZXR1cm4gc3RyLnRyaW0oKS5yZXBsYWNlKC8oXFxzKlxcLSpcXGJcXHd8W0EtWl0pL2csIGZ1bmN0aW9uKCQxKSB7XG4gICAgJDEgPSAkMS50cmltKCkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKCctJywgJycpO1xuICAgIHJldHVybiAoJDFbMF0gPT09ICdfJyA/ICcnIDogJ18nKSArICQxO1xuICB9KS5zbGljZSgxKTtcbn07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInN0clRvU25ha2VDYXNlIiwic3RyIiwiRXJyb3IiLCJ0cmltIiwicmVwbGFjZSIsIiQxIiwidG9Mb3dlckNhc2UiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/str-to-snake-case.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/to-camel-case.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/to-camel-case.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Dependencies\n */ const convertKeys = __webpack_require__(/*! ./convert-keys */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/convert-keys.js\");\nconst strToCamelCase = __webpack_require__(/*! ./str-to-camel-case */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/str-to-camel-case.js\");\n/**\n * Convert object keys to camel case\n */ module.exports = function toCamelCase(obj, ignored) {\n    return convertKeys(obj, strToCamelCase, ignored);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy90by1jYW1lbC1jYXNlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUE7O0NBRUMsR0FDRCxNQUFNQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUM1QixNQUFNQyxpQkFBaUJELG1CQUFPQSxDQUFDO0FBRS9COztDQUVDLEdBQ0RFLE9BQU9DLE9BQU8sR0FBRyxTQUFTQyxZQUFZQyxHQUFHLEVBQUVDLE9BQU87SUFDaEQsT0FBT1AsWUFBWU0sS0FBS0osZ0JBQWdCSztBQUMxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlY2lwZS1rZWVwZXIvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy90by1jYW1lbC1jYXNlLmpzPzBkZTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERlcGVuZGVuY2llc1xuICovXG5jb25zdCBjb252ZXJ0S2V5cyA9IHJlcXVpcmUoJy4vY29udmVydC1rZXlzJyk7XG5jb25zdCBzdHJUb0NhbWVsQ2FzZSA9IHJlcXVpcmUoJy4vc3RyLXRvLWNhbWVsLWNhc2UnKTtcblxuLyoqXG4gKiBDb252ZXJ0IG9iamVjdCBrZXlzIHRvIGNhbWVsIGNhc2VcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0b0NhbWVsQ2FzZShvYmosIGlnbm9yZWQpIHtcbiAgcmV0dXJuIGNvbnZlcnRLZXlzKG9iaiwgc3RyVG9DYW1lbENhc2UsIGlnbm9yZWQpO1xufTtcbiJdLCJuYW1lcyI6WyJjb252ZXJ0S2V5cyIsInJlcXVpcmUiLCJzdHJUb0NhbWVsQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0b0NhbWVsQ2FzZSIsIm9iaiIsImlnbm9yZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/to-camel-case.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/to-snake-case.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/to-snake-case.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Dependencies\n */ const convertKeys = __webpack_require__(/*! ./convert-keys */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/convert-keys.js\");\nconst strToSnakeCase = __webpack_require__(/*! ./str-to-snake-case */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/str-to-snake-case.js\");\n/**\n * Convert object keys to snake case\n */ module.exports = function toSnakeCase(obj, ignored) {\n    return convertKeys(obj, strToSnakeCase, ignored);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy90by1zbmFrZS1jYXNlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUE7O0NBRUMsR0FDRCxNQUFNQSxjQUFjQyxtQkFBT0EsQ0FBQztBQUM1QixNQUFNQyxpQkFBaUJELG1CQUFPQSxDQUFDO0FBRS9COztDQUVDLEdBQ0RFLE9BQU9DLE9BQU8sR0FBRyxTQUFTQyxZQUFZQyxHQUFHLEVBQUVDLE9BQU87SUFDaEQsT0FBT1AsWUFBWU0sS0FBS0osZ0JBQWdCSztBQUMxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlY2lwZS1rZWVwZXIvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy90by1zbmFrZS1jYXNlLmpzPzM3ZGQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERlcGVuZGVuY2llc1xuICovXG5jb25zdCBjb252ZXJ0S2V5cyA9IHJlcXVpcmUoJy4vY29udmVydC1rZXlzJyk7XG5jb25zdCBzdHJUb1NuYWtlQ2FzZSA9IHJlcXVpcmUoJy4vc3RyLXRvLXNuYWtlLWNhc2UnKTtcblxuLyoqXG4gKiBDb252ZXJ0IG9iamVjdCBrZXlzIHRvIHNuYWtlIGNhc2VcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0b1NuYWtlQ2FzZShvYmosIGlnbm9yZWQpIHtcbiAgcmV0dXJuIGNvbnZlcnRLZXlzKG9iaiwgc3RyVG9TbmFrZUNhc2UsIGlnbm9yZWQpO1xufTtcbiJdLCJuYW1lcyI6WyJjb252ZXJ0S2V5cyIsInJlcXVpcmUiLCJzdHJUb1NuYWtlQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0b1NuYWtlQ2FzZSIsIm9iaiIsImlnbm9yZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/to-snake-case.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/validate-settings.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/validate-settings.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\nconst validate = (parent, parentName, childName, childType)=>{\n    if (typeof parent === \"undefined\" || typeof parent[childName] === \"undefined\") {\n        return;\n    }\n    if (typeof parent[childName] !== childType) {\n        throw new Error(`${childType} expected for \\`${parentName}.${childName}\\``);\n    }\n};\nmodule.exports = {\n    validateMailSettings (settings) {\n        if (typeof settings !== \"object\") {\n            throw new Error(\"Object expected for `mailSettings`\");\n        }\n        const { bcc, bypassListManagement, bypassSpamManagement, bypassBounceManagement, bypassUnsubscribeManagement, footer, sandboxMode, spamCheck } = settings;\n        validate(bcc, \"bcc\", \"enable\", \"boolean\");\n        validate(bcc, \"bcc\", \"email\", \"string\");\n        validate(bypassListManagement, \"bypassListManagement\", \"enable\", \"boolean\");\n        validate(bypassSpamManagement, \"bypassSpamManagement\", \"enable\", \"boolean\");\n        validate(bypassBounceManagement, \"bypassBounceManagement\", \"enable\", \"boolean\");\n        validate(bypassUnsubscribeManagement, \"bypassUnsubscribeManagement\", \"enable\", \"boolean\");\n        validate(footer, \"footer\", \"enable\", \"boolean\");\n        validate(footer, \"footer\", \"text\", \"string\");\n        validate(footer, \"footer\", \"html\", \"string\");\n        validate(sandboxMode, \"sandboxMode\", \"enable\", \"boolean\");\n        validate(spamCheck, \"spamCheck\", \"enable\", \"boolean\");\n        validate(spamCheck, \"spamCheck\", \"threshold\", \"number\");\n        validate(spamCheck, \"spamCheck\", \"postToUrl\", \"string\");\n    },\n    validateTrackingSettings (settings) {\n        if (typeof settings !== \"object\") {\n            throw new Error(\"Object expected for `trackingSettings`\");\n        }\n        const { clickTracking, openTracking, subscriptionTracking, ganalytics } = settings;\n        validate(clickTracking, \"clickTracking\", \"enable\", \"boolean\");\n        validate(clickTracking, \"clickTracking\", \"enableText\", \"boolean\");\n        validate(openTracking, \"openTracking\", \"enable\", \"boolean\");\n        validate(openTracking, \"openTracking\", \"substitutionTag\", \"string\");\n        validate(subscriptionTracking, \"subscriptionTracking\", \"enable\", \"boolean\");\n        validate(subscriptionTracking, \"subscriptionTracking\", \"text\", \"string\");\n        validate(subscriptionTracking, \"subscriptionTracking\", \"html\", \"string\");\n        validate(subscriptionTracking, \"subscriptionTracking\", \"substitutionTag\", \"string\");\n        validate(ganalytics, \"ganalytics\", \"enable\", \"boolean\");\n        validate(ganalytics, \"ganalytics\", \"utm_source\", \"string\");\n        validate(ganalytics, \"ganalytics\", \"utm_medium\", \"string\");\n        validate(ganalytics, \"ganalytics\", \"utm_term\", \"string\");\n        validate(ganalytics, \"ganalytics\", \"utm_content\", \"string\");\n        validate(ganalytics, \"ganalytics\", \"utm_campaign\", \"string\");\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy92YWxpZGF0ZS1zZXR0aW5ncy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLFdBQVcsQ0FBQ0MsUUFBUUMsWUFBWUMsV0FBV0M7SUFDL0MsSUFBSSxPQUFPSCxXQUFXLGVBQWUsT0FBT0EsTUFBTSxDQUFDRSxVQUFVLEtBQUssYUFBYTtRQUM3RTtJQUNGO0lBQ0EsSUFBSSxPQUFPRixNQUFNLENBQUNFLFVBQVUsS0FBS0MsV0FBVztRQUMxQyxNQUFNLElBQUlDLE1BQU0sQ0FBQyxFQUFFRCxVQUFVLGdCQUFnQixFQUFFRixXQUFXLENBQUMsRUFBRUMsVUFBVSxFQUFFLENBQUM7SUFDNUU7QUFDRjtBQUVBRyxPQUFPQyxPQUFPLEdBQUc7SUFDZkMsc0JBQXFCQyxRQUFRO1FBQzNCLElBQUksT0FBT0EsYUFBYSxVQUFVO1lBQ2hDLE1BQU0sSUFBSUosTUFBTTtRQUNsQjtRQUNBLE1BQU0sRUFDSkssR0FBRyxFQUNIQyxvQkFBb0IsRUFDcEJDLG9CQUFvQixFQUNwQkMsc0JBQXNCLEVBQ3RCQywyQkFBMkIsRUFDM0JDLE1BQU0sRUFDTkMsV0FBVyxFQUNYQyxTQUFTLEVBQ1YsR0FBR1I7UUFDSlQsU0FBU1UsS0FBSyxPQUFPLFVBQVU7UUFDL0JWLFNBQVNVLEtBQUssT0FBTyxTQUFTO1FBQzlCVixTQUFTVyxzQkFBc0Isd0JBQXdCLFVBQVU7UUFDakVYLFNBQVNZLHNCQUFzQix3QkFBd0IsVUFBVTtRQUNqRVosU0FBU2Esd0JBQXdCLDBCQUEwQixVQUFVO1FBQ3JFYixTQUFTYyw2QkFBNkIsK0JBQStCLFVBQVU7UUFDL0VkLFNBQVNlLFFBQVEsVUFBVSxVQUFVO1FBQ3JDZixTQUFTZSxRQUFRLFVBQVUsUUFBUTtRQUNuQ2YsU0FBU2UsUUFBUSxVQUFVLFFBQVE7UUFDbkNmLFNBQVNnQixhQUFhLGVBQWUsVUFBVTtRQUMvQ2hCLFNBQVNpQixXQUFXLGFBQWEsVUFBVTtRQUMzQ2pCLFNBQVNpQixXQUFXLGFBQWEsYUFBYTtRQUM5Q2pCLFNBQVNpQixXQUFXLGFBQWEsYUFBYTtJQUNoRDtJQUVBQywwQkFBeUJULFFBQVE7UUFDL0IsSUFBSSxPQUFPQSxhQUFhLFVBQVU7WUFDaEMsTUFBTSxJQUFJSixNQUFNO1FBQ2xCO1FBQ0EsTUFBTSxFQUNKYyxhQUFhLEVBQ2JDLFlBQVksRUFDWkMsb0JBQW9CLEVBQ3BCQyxVQUFVLEVBQ1gsR0FBR2I7UUFDSlQsU0FBU21CLGVBQWUsaUJBQWlCLFVBQVU7UUFDbkRuQixTQUFTbUIsZUFBZSxpQkFBaUIsY0FBYztRQUN2RG5CLFNBQVNvQixjQUFjLGdCQUFnQixVQUFVO1FBQ2pEcEIsU0FBU29CLGNBQWMsZ0JBQWdCLG1CQUFtQjtRQUMxRHBCLFNBQVNxQixzQkFBc0Isd0JBQXdCLFVBQVU7UUFDakVyQixTQUFTcUIsc0JBQXNCLHdCQUF3QixRQUFRO1FBQy9EckIsU0FBU3FCLHNCQUFzQix3QkFBd0IsUUFBUTtRQUMvRHJCLFNBQVNxQixzQkFBc0Isd0JBQXdCLG1CQUFtQjtRQUMxRXJCLFNBQVNzQixZQUFZLGNBQWMsVUFBVTtRQUM3Q3RCLFNBQVNzQixZQUFZLGNBQWMsY0FBYztRQUNqRHRCLFNBQVNzQixZQUFZLGNBQWMsY0FBYztRQUNqRHRCLFNBQVNzQixZQUFZLGNBQWMsWUFBWTtRQUMvQ3RCLFNBQVNzQixZQUFZLGNBQWMsZUFBZTtRQUNsRHRCLFNBQVNzQixZQUFZLGNBQWMsZ0JBQWdCO0lBQ3JEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWNpcGUta2VlcGVyLy4vbm9kZV9tb2R1bGVzL0BzZW5kZ3JpZC9oZWxwZXJzL2hlbHBlcnMvdmFsaWRhdGUtc2V0dGluZ3MuanM/OGViZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHZhbGlkYXRlID0gKHBhcmVudCwgcGFyZW50TmFtZSwgY2hpbGROYW1lLCBjaGlsZFR5cGUpID0+IHtcbiAgaWYgKHR5cGVvZiBwYXJlbnQgPT09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiBwYXJlbnRbY2hpbGROYW1lXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHR5cGVvZiBwYXJlbnRbY2hpbGROYW1lXSAhPT0gY2hpbGRUeXBlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2NoaWxkVHlwZX0gZXhwZWN0ZWQgZm9yIFxcYCR7cGFyZW50TmFtZX0uJHtjaGlsZE5hbWV9XFxgYClcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHZhbGlkYXRlTWFpbFNldHRpbmdzKHNldHRpbmdzKSB7XG4gICAgaWYgKHR5cGVvZiBzZXR0aW5ncyAhPT0gJ29iamVjdCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignT2JqZWN0IGV4cGVjdGVkIGZvciBgbWFpbFNldHRpbmdzYCcpO1xuICAgIH1cbiAgICBjb25zdCB7XG4gICAgICBiY2MsXG4gICAgICBieXBhc3NMaXN0TWFuYWdlbWVudCxcbiAgICAgIGJ5cGFzc1NwYW1NYW5hZ2VtZW50LFxuICAgICAgYnlwYXNzQm91bmNlTWFuYWdlbWVudCxcbiAgICAgIGJ5cGFzc1Vuc3Vic2NyaWJlTWFuYWdlbWVudCxcbiAgICAgIGZvb3RlcixcbiAgICAgIHNhbmRib3hNb2RlLFxuICAgICAgc3BhbUNoZWNrLFxuICAgIH0gPSBzZXR0aW5ncztcbiAgICB2YWxpZGF0ZShiY2MsICdiY2MnLCAnZW5hYmxlJywgJ2Jvb2xlYW4nKTtcbiAgICB2YWxpZGF0ZShiY2MsICdiY2MnLCAnZW1haWwnLCAnc3RyaW5nJyk7XG4gICAgdmFsaWRhdGUoYnlwYXNzTGlzdE1hbmFnZW1lbnQsICdieXBhc3NMaXN0TWFuYWdlbWVudCcsICdlbmFibGUnLCAnYm9vbGVhbicpO1xuICAgIHZhbGlkYXRlKGJ5cGFzc1NwYW1NYW5hZ2VtZW50LCAnYnlwYXNzU3BhbU1hbmFnZW1lbnQnLCAnZW5hYmxlJywgJ2Jvb2xlYW4nKTtcbiAgICB2YWxpZGF0ZShieXBhc3NCb3VuY2VNYW5hZ2VtZW50LCAnYnlwYXNzQm91bmNlTWFuYWdlbWVudCcsICdlbmFibGUnLCAnYm9vbGVhbicpO1xuICAgIHZhbGlkYXRlKGJ5cGFzc1Vuc3Vic2NyaWJlTWFuYWdlbWVudCwgJ2J5cGFzc1Vuc3Vic2NyaWJlTWFuYWdlbWVudCcsICdlbmFibGUnLCAnYm9vbGVhbicpO1xuICAgIHZhbGlkYXRlKGZvb3RlciwgJ2Zvb3RlcicsICdlbmFibGUnLCAnYm9vbGVhbicpO1xuICAgIHZhbGlkYXRlKGZvb3RlciwgJ2Zvb3RlcicsICd0ZXh0JywgJ3N0cmluZycpO1xuICAgIHZhbGlkYXRlKGZvb3RlciwgJ2Zvb3RlcicsICdodG1sJywgJ3N0cmluZycpO1xuICAgIHZhbGlkYXRlKHNhbmRib3hNb2RlLCAnc2FuZGJveE1vZGUnLCAnZW5hYmxlJywgJ2Jvb2xlYW4nKTtcbiAgICB2YWxpZGF0ZShzcGFtQ2hlY2ssICdzcGFtQ2hlY2snLCAnZW5hYmxlJywgJ2Jvb2xlYW4nKTtcbiAgICB2YWxpZGF0ZShzcGFtQ2hlY2ssICdzcGFtQ2hlY2snLCAndGhyZXNob2xkJywgJ251bWJlcicpO1xuICAgIHZhbGlkYXRlKHNwYW1DaGVjaywgJ3NwYW1DaGVjaycsICdwb3N0VG9VcmwnLCAnc3RyaW5nJyk7XG4gIH0sXG5cbiAgdmFsaWRhdGVUcmFja2luZ1NldHRpbmdzKHNldHRpbmdzKSB7XG4gICAgaWYgKHR5cGVvZiBzZXR0aW5ncyAhPT0gJ29iamVjdCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignT2JqZWN0IGV4cGVjdGVkIGZvciBgdHJhY2tpbmdTZXR0aW5nc2AnKTtcbiAgICB9XG4gICAgY29uc3Qge1xuICAgICAgY2xpY2tUcmFja2luZyxcbiAgICAgIG9wZW5UcmFja2luZyxcbiAgICAgIHN1YnNjcmlwdGlvblRyYWNraW5nLFxuICAgICAgZ2FuYWx5dGljcyxcbiAgICB9ID0gc2V0dGluZ3M7XG4gICAgdmFsaWRhdGUoY2xpY2tUcmFja2luZywgJ2NsaWNrVHJhY2tpbmcnLCAnZW5hYmxlJywgJ2Jvb2xlYW4nKTtcbiAgICB2YWxpZGF0ZShjbGlja1RyYWNraW5nLCAnY2xpY2tUcmFja2luZycsICdlbmFibGVUZXh0JywgJ2Jvb2xlYW4nKTtcbiAgICB2YWxpZGF0ZShvcGVuVHJhY2tpbmcsICdvcGVuVHJhY2tpbmcnLCAnZW5hYmxlJywgJ2Jvb2xlYW4nKTtcbiAgICB2YWxpZGF0ZShvcGVuVHJhY2tpbmcsICdvcGVuVHJhY2tpbmcnLCAnc3Vic3RpdHV0aW9uVGFnJywgJ3N0cmluZycpO1xuICAgIHZhbGlkYXRlKHN1YnNjcmlwdGlvblRyYWNraW5nLCAnc3Vic2NyaXB0aW9uVHJhY2tpbmcnLCAnZW5hYmxlJywgJ2Jvb2xlYW4nKTtcbiAgICB2YWxpZGF0ZShzdWJzY3JpcHRpb25UcmFja2luZywgJ3N1YnNjcmlwdGlvblRyYWNraW5nJywgJ3RleHQnLCAnc3RyaW5nJyk7XG4gICAgdmFsaWRhdGUoc3Vic2NyaXB0aW9uVHJhY2tpbmcsICdzdWJzY3JpcHRpb25UcmFja2luZycsICdodG1sJywgJ3N0cmluZycpO1xuICAgIHZhbGlkYXRlKHN1YnNjcmlwdGlvblRyYWNraW5nLCAnc3Vic2NyaXB0aW9uVHJhY2tpbmcnLCAnc3Vic3RpdHV0aW9uVGFnJywgJ3N0cmluZycpO1xuICAgIHZhbGlkYXRlKGdhbmFseXRpY3MsICdnYW5hbHl0aWNzJywgJ2VuYWJsZScsICdib29sZWFuJyk7XG4gICAgdmFsaWRhdGUoZ2FuYWx5dGljcywgJ2dhbmFseXRpY3MnLCAndXRtX3NvdXJjZScsICdzdHJpbmcnKTtcbiAgICB2YWxpZGF0ZShnYW5hbHl0aWNzLCAnZ2FuYWx5dGljcycsICd1dG1fbWVkaXVtJywgJ3N0cmluZycpO1xuICAgIHZhbGlkYXRlKGdhbmFseXRpY3MsICdnYW5hbHl0aWNzJywgJ3V0bV90ZXJtJywgJ3N0cmluZycpO1xuICAgIHZhbGlkYXRlKGdhbmFseXRpY3MsICdnYW5hbHl0aWNzJywgJ3V0bV9jb250ZW50JywgJ3N0cmluZycpO1xuICAgIHZhbGlkYXRlKGdhbmFseXRpY3MsICdnYW5hbHl0aWNzJywgJ3V0bV9jYW1wYWlnbicsICdzdHJpbmcnKTtcbiAgfSxcbn07XG4iXSwibmFtZXMiOlsidmFsaWRhdGUiLCJwYXJlbnQiLCJwYXJlbnROYW1lIiwiY2hpbGROYW1lIiwiY2hpbGRUeXBlIiwiRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwidmFsaWRhdGVNYWlsU2V0dGluZ3MiLCJzZXR0aW5ncyIsImJjYyIsImJ5cGFzc0xpc3RNYW5hZ2VtZW50IiwiYnlwYXNzU3BhbU1hbmFnZW1lbnQiLCJieXBhc3NCb3VuY2VNYW5hZ2VtZW50IiwiYnlwYXNzVW5zdWJzY3JpYmVNYW5hZ2VtZW50IiwiZm9vdGVyIiwic2FuZGJveE1vZGUiLCJzcGFtQ2hlY2siLCJ2YWxpZGF0ZVRyYWNraW5nU2V0dGluZ3MiLCJjbGlja1RyYWNraW5nIiwib3BlblRyYWNraW5nIiwic3Vic2NyaXB0aW9uVHJhY2tpbmciLCJnYW5hbHl0aWNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/validate-settings.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/helpers/wrap-substitutions.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/helpers/wrap-substitutions.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n/**\n * Wrap substitutions\n */ module.exports = function wrap(substitutions, left = \"{{\", right = \"}}\") {\n    //Process arrays\n    if (Array.isArray(substitutions)) {\n        return substitutions.map((subs)=>wrap(subs, left, right));\n    }\n    //Initialize new wrapped object\n    const wrapped = {};\n    //Map substitutions and ensure string for value\n    for(const key in substitutions){\n        //istanbul ignore else\n        if (substitutions.hasOwnProperty(key)) {\n            wrapped[left + key + right] = String(substitutions[key]);\n        }\n    }\n    //Return wrapped substitutions\n    return wrapped;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaGVscGVycy93cmFwLXN1YnN0aXR1dGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Q0FFQyxHQUNEQSxPQUFPQyxPQUFPLEdBQUcsU0FBU0MsS0FBS0MsYUFBYSxFQUFFQyxPQUFPLElBQUksRUFBRUMsUUFBUSxJQUFJO0lBRXJFLGdCQUFnQjtJQUNoQixJQUFJQyxNQUFNQyxPQUFPLENBQUNKLGdCQUFnQjtRQUNoQyxPQUFPQSxjQUFjSyxHQUFHLENBQUNDLENBQUFBLE9BQVFQLEtBQUtPLE1BQU1MLE1BQU1DO0lBQ3BEO0lBRUEsK0JBQStCO0lBQy9CLE1BQU1LLFVBQVUsQ0FBQztJQUVqQiwrQ0FBK0M7SUFDL0MsSUFBSyxNQUFNQyxPQUFPUixjQUFlO1FBQy9CLHNCQUFzQjtRQUN0QixJQUFJQSxjQUFjUyxjQUFjLENBQUNELE1BQU07WUFDckNELE9BQU8sQ0FBQ04sT0FBT08sTUFBTU4sTUFBTSxHQUFHUSxPQUFPVixhQUFhLENBQUNRLElBQUk7UUFDekQ7SUFDRjtJQUVBLDhCQUE4QjtJQUM5QixPQUFPRDtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjaXBlLWtlZXBlci8uL25vZGVfbW9kdWxlcy9Ac2VuZGdyaWQvaGVscGVycy9oZWxwZXJzL3dyYXAtc3Vic3RpdHV0aW9ucy5qcz85OWUzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBXcmFwIHN1YnN0aXR1dGlvbnNcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB3cmFwKHN1YnN0aXR1dGlvbnMsIGxlZnQgPSAne3snLCByaWdodCA9ICd9fScpIHtcblxuICAvL1Byb2Nlc3MgYXJyYXlzXG4gIGlmIChBcnJheS5pc0FycmF5KHN1YnN0aXR1dGlvbnMpKSB7XG4gICAgcmV0dXJuIHN1YnN0aXR1dGlvbnMubWFwKHN1YnMgPT4gd3JhcChzdWJzLCBsZWZ0LCByaWdodCkpO1xuICB9XG5cbiAgLy9Jbml0aWFsaXplIG5ldyB3cmFwcGVkIG9iamVjdFxuICBjb25zdCB3cmFwcGVkID0ge307XG5cbiAgLy9NYXAgc3Vic3RpdHV0aW9ucyBhbmQgZW5zdXJlIHN0cmluZyBmb3IgdmFsdWVcbiAgZm9yIChjb25zdCBrZXkgaW4gc3Vic3RpdHV0aW9ucykge1xuICAgIC8vaXN0YW5idWwgaWdub3JlIGVsc2VcbiAgICBpZiAoc3Vic3RpdHV0aW9ucy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICB3cmFwcGVkW2xlZnQgKyBrZXkgKyByaWdodF0gPSBTdHJpbmcoc3Vic3RpdHV0aW9uc1trZXldKTtcbiAgICB9XG4gIH1cblxuICAvL1JldHVybiB3cmFwcGVkIHN1YnN0aXR1dGlvbnNcbiAgcmV0dXJuIHdyYXBwZWQ7XG59O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ3cmFwIiwic3Vic3RpdHV0aW9ucyIsImxlZnQiLCJyaWdodCIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsInN1YnMiLCJ3cmFwcGVkIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJTdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/helpers/wrap-substitutions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/helpers/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@sendgrid/helpers/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Load support assets\n */ const classes = __webpack_require__(/*! ./classes */ \"(rsc)/./node_modules/@sendgrid/helpers/classes/index.js\");\nconst helpers = __webpack_require__(/*! ./helpers */ \"(rsc)/./node_modules/@sendgrid/helpers/helpers/index.js\");\n/**\n * Export\n */ module.exports = {\n    classes,\n    helpers\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL2hlbHBlcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Q0FFQyxHQUNELE1BQU1BLFVBQVVDLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU1DLFVBQVVELG1CQUFPQSxDQUFDO0FBRXhCOztDQUVDLEdBQ0RFLE9BQU9DLE9BQU8sR0FBRztJQUFDSjtJQUFTRTtBQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjaXBlLWtlZXBlci8uL25vZGVfbW9kdWxlcy9Ac2VuZGdyaWQvaGVscGVycy9pbmRleC5qcz83NTM1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBMb2FkIHN1cHBvcnQgYXNzZXRzXG4gKi9cbmNvbnN0IGNsYXNzZXMgPSByZXF1aXJlKCcuL2NsYXNzZXMnKTtcbmNvbnN0IGhlbHBlcnMgPSByZXF1aXJlKCcuL2hlbHBlcnMnKTtcblxuLyoqXG4gKiBFeHBvcnRcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7Y2xhc3NlcywgaGVscGVyc307XG4iXSwibmFtZXMiOlsiY2xhc3NlcyIsInJlcXVpcmUiLCJoZWxwZXJzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/helpers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/mail/index.js":
/*!**********************************************!*\
  !*** ./node_modules/@sendgrid/mail/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst mailer = __webpack_require__(/*! ./src/mail */ \"(rsc)/./node_modules/@sendgrid/mail/src/mail.js\");\nconst MailService = __webpack_require__(/*! ./src/classes/mail-service */ \"(rsc)/./node_modules/@sendgrid/mail/src/classes/mail-service.js\");\nmodule.exports = mailer;\nmodule.exports.MailService = MailService;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL21haWwvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNQyxjQUFjRCxtQkFBT0EsQ0FBQztBQUU1QkUsT0FBT0MsT0FBTyxHQUFHSjtBQUNqQkcsMEJBQTBCLEdBQUdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjaXBlLWtlZXBlci8uL25vZGVfbW9kdWxlcy9Ac2VuZGdyaWQvbWFpbC9pbmRleC5qcz8xNTNlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgbWFpbGVyID0gcmVxdWlyZSgnLi9zcmMvbWFpbCcpO1xuY29uc3QgTWFpbFNlcnZpY2UgPSByZXF1aXJlKCcuL3NyYy9jbGFzc2VzL21haWwtc2VydmljZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1haWxlcjtcbm1vZHVsZS5leHBvcnRzLk1haWxTZXJ2aWNlID0gTWFpbFNlcnZpY2U7XG4iXSwibmFtZXMiOlsibWFpbGVyIiwicmVxdWlyZSIsIk1haWxTZXJ2aWNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/mail/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/mail/src/classes/mail-service.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sendgrid/mail/src/classes/mail-service.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Dependencies\n */ const { Client } = __webpack_require__(/*! @sendgrid/client */ \"(rsc)/./node_modules/@sendgrid/client/index.js\");\nconst { classes: { Mail } } = __webpack_require__(/*! @sendgrid/helpers */ \"(rsc)/./node_modules/@sendgrid/helpers/index.js\");\n/**\n * Mail service class\n */ class MailService {\n    /**\n   * Constructor\n   */ constructor(){\n        // Set client, initialize substitution wrappers and secret rules filter.\n        this.setClient(new Client());\n        this.setSubstitutionWrappers(\"{{\", \"}}\");\n        this.secretRules = [];\n    }\n    /**\n   * Set client\n   */ setClient(client) {\n        this.client = client;\n        return this;\n    }\n    /**\n   * SendGrid API key passthrough for convenience.\n   */ setApiKey(apiKey) {\n        this.client.setApiKey(apiKey);\n        return this;\n    }\n    /**\n   * Twilio Email Auth passthrough for convenience.\n   */ setTwilioEmailAuth(username, password) {\n        this.client.setTwilioEmailAuth(username, password);\n    }\n    /**\n   * Set client timeout\n   */ setTimeout(timeout) {\n        if (typeof timeout === \"undefined\") {\n            return;\n        }\n        this.client.setDefaultRequest(\"timeout\", timeout);\n    }\n    /**\n   * Set substitution wrappers\n   */ setSubstitutionWrappers(left, right) {\n        if (typeof left === \"undefined\" || typeof right === \"undefined\") {\n            throw new Error(\"Must provide both left and right side wrappers\");\n        }\n        if (!Array.isArray(this.substitutionWrappers)) {\n            this.substitutionWrappers = [];\n        }\n        this.substitutionWrappers[0] = left;\n        this.substitutionWrappers[1] = right;\n        return this;\n    }\n    /**\n   * Set secret rules for filtering the e-mail content\n   */ setSecretRules(rules) {\n        if (!(rules instanceof Array)) {\n            rules = [\n                rules\n            ];\n        }\n        const tmpRules = rules.map(function(rule) {\n            const ruleType = typeof rule;\n            if (ruleType === \"string\") {\n                return {\n                    pattern: new RegExp(rule)\n                };\n            } else if (ruleType === \"object\") {\n                // normalize rule object\n                if (rule instanceof RegExp) {\n                    rule = {\n                        pattern: rule\n                    };\n                } else if (rule.hasOwnProperty(\"pattern\") && typeof rule.pattern === \"string\") {\n                    rule.pattern = new RegExp(rule.pattern);\n                }\n                try {\n                    // test if rule.pattern is a valid regex\n                    rule.pattern.test(\"\");\n                    return rule;\n                } catch (err) {\n                // continue regardless of error\n                }\n            }\n        });\n        this.secretRules = tmpRules.filter(function(val) {\n            return val;\n        });\n    }\n    /**\n   * Check if the e-mail is safe to be sent\n   */ filterSecrets(body) {\n        if (typeof body === \"object\" && !body.hasOwnProperty(\"content\")) {\n            return;\n        }\n        const self = this;\n        body.content.forEach(function(data) {\n            self.secretRules.forEach(function(rule) {\n                if (rule.hasOwnProperty(\"pattern\") && !rule.pattern.test(data.value)) {\n                    return;\n                }\n                let message = `The pattern '${rule.pattern}'`;\n                if (rule.name) {\n                    message += `identified by '${rule.name}'`;\n                }\n                message += \" was found in the Mail content!\";\n                throw new Error(message);\n            });\n        });\n    }\n    /**\n   * Send email\n   */ send(data, isMultiple = false, cb) {\n        //Callback as second parameter\n        if (typeof isMultiple === \"function\") {\n            cb = isMultiple;\n            isMultiple = false;\n        }\n        //Array? Send in parallel\n        if (Array.isArray(data)) {\n            //Create promise\n            const promise = Promise.all(data.map((item)=>{\n                return this.send(item, isMultiple);\n            }));\n            //Execute callback if provided\n            if (cb) {\n                promise.then((result)=>cb(null, result)).catch((error)=>cb(error, null));\n            }\n            //Return promise\n            return promise;\n        }\n        //Send mail\n        try {\n            //Append multiple flag to data if not set\n            if (typeof data.isMultiple === \"undefined\") {\n                data.isMultiple = isMultiple;\n            }\n            //Append global substitution wrappers if not set in data\n            if (typeof data.substitutionWrappers === \"undefined\") {\n                data.substitutionWrappers = this.substitutionWrappers;\n            }\n            //Create Mail instance from data and get JSON body for request\n            const mail = Mail.create(data);\n            const body = mail.toJSON();\n            //Filters the Mail body to avoid sensitive content leakage\n            this.filterSecrets(body);\n            //Create request\n            const request = {\n                method: \"POST\",\n                url: \"/v3/mail/send\",\n                headers: mail.headers,\n                body\n            };\n            //Send\n            return this.client.request(request, cb);\n        } catch (error) {\n            //Pass to callback if provided\n            if (cb) {\n                // eslint-disable-next-line callback-return\n                cb(error, null);\n            }\n            //Reject promise\n            return Promise.reject(error);\n        }\n    }\n    /**\n   * Send multiple emails (shortcut)\n   */ sendMultiple(data, cb) {\n        return this.send(data, true, cb);\n    }\n}\n//Export class\nmodule.exports = MailService;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/mail/src/classes/mail-service.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/mail/src/mail.js":
/*!*************************************************!*\
  !*** ./node_modules/@sendgrid/mail/src/mail.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Dependencies\n */ const MailService = __webpack_require__(/*! ./classes/mail-service */ \"(rsc)/./node_modules/@sendgrid/mail/src/classes/mail-service.js\");\n//Export singleton instance\nmodule.exports = new MailService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNlbmRncmlkL21haWwvc3JjL21haWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Q0FFQyxHQUNELE1BQU1BLGNBQWNDLG1CQUFPQSxDQUFDO0FBRTVCLDJCQUEyQjtBQUMzQkMsT0FBT0MsT0FBTyxHQUFHLElBQUlIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjaXBlLWtlZXBlci8uL25vZGVfbW9kdWxlcy9Ac2VuZGdyaWQvbWFpbC9zcmMvbWFpbC5qcz82OTE0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZXBlbmRlbmNpZXNcbiAqL1xuY29uc3QgTWFpbFNlcnZpY2UgPSByZXF1aXJlKCcuL2NsYXNzZXMvbWFpbC1zZXJ2aWNlJyk7XG5cbi8vRXhwb3J0IHNpbmdsZXRvbiBpbnN0YW5jZVxubW9kdWxlLmV4cG9ydHMgPSBuZXcgTWFpbFNlcnZpY2UoKTtcbiJdLCJuYW1lcyI6WyJNYWlsU2VydmljZSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@sendgrid/mail/src/mail.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@sendgrid/client/package.json":
/*!****************************************************!*\
  !*** ./node_modules/@sendgrid/client/package.json ***!
  \****************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"@sendgrid/client","description":"Twilio SendGrid NodeJS API client","version":"8.1.5","author":"Twilio SendGrid <help@twilio.com> (sendgrid.com)","contributors":["Kyle Partridge <kyle.partridge@sendgrid.com>","David Tomberlin <david.tomberlin@sendgrid.com>","Swift <swift@sendgrid.com>","Brandon West <brandon.west@sendgrid.com>","Scott Motte <scott.motte@sendgrid.com>","Robert Acosta <robert.acosta@sendgrid.com>","Elmer Thomas <ethomas@twilio.com>","Adam Reis <adam@reis.nz>"],"license":"MIT","homepage":"https://sendgrid.com","repository":{"type":"git","url":"git://github.com/sendgrid/sendgrid-nodejs.git"},"publishConfig":{"access":"public"},"main":"index.js","engines":{"node":">=12.*"},"dependencies":{"@sendgrid/helpers":"^8.0.0","axios":"^1.8.2"},"devDependencies":{"chai":"4.2.0","nock":"^10.0.6"},"resolutions":{"chai":"4.2.0"},"tags":["http","rest","api","mail","sendgrid"],"gitHead":"2bac86884f71be3fb19f96a10c02a1fb616b81fc"}');

/***/ })

};
;